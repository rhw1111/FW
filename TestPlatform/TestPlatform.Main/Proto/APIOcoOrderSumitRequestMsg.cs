// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: APIOcoOrderSumitRequestMsg.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Ctrade.Message {

  /// <summary>Holder for reflection information generated from APIOcoOrderSumitRequestMsg.proto</summary>
  public static partial class APIOcoOrderSumitRequestMsgReflection {

    #region Descriptor
    /// <summary>File descriptor for APIOcoOrderSumitRequestMsg.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static APIOcoOrderSumitRequestMsgReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiBBUElPY29PcmRlclN1bWl0UmVxdWVzdE1zZy5wcm90bxIOY3RyYWRlLm1l",
            "c3NhZ2UaDnN0YW5kYXJkLnByb3RvGgxIZWFkZXIucHJvdG8aClVzZXIucHJv",
            "dG8iiwEKFEFQSU9jb1NpbmdsZU9yZGVyTXNnEhcKBnN5bWJvbBgBIAIoCToH",
            "VVNELkNOWRISCgppbnN0cnVtZW50GAIgAigJEhAKCGRlYWxfZGlyGAMgAigF",
            "EhIKCm9yZGVyX3R5cGUYBCACKAkSDQoFcHJpY2UYBSACKAMSEQoJb3JkZXJf",
            "cXR5GAYgAigDIvABChdBUElPY29PcmRlclN1bWl0UmVxdWVzdBILCgNta3QY",
            "ASACKAUSEQoJZXhwaXJlX3RtGAIgAigJEhwKEG1hcmtldF9pbmRpY2F0b3IY",
            "AyACKAk6AjExEigKGGluc3Rfc2NvcGVfc2VjdXJpdHlfdHlwZRgEIAIoCToG",
            "RlhTV0FQEhQKDG9yZGVyX3JlcV9pZBgFIAIoCRI0CgZvcmRlcnMYYiADKAsy",
            "JC5jdHJhZGUubWVzc2FnZS5BUElPY29TaW5nbGVPcmRlck1zZxIhCgN1c3IY",
            "ZCABKAsyFC5jdHJhZGUubWVzc2FnZS5Vc2VyInsKGkFQSU9jb09yZGVyU3Vt",
            "aXRSZXF1ZXN0TXNnEiYKBmhlYWRlchgBIAEoCzIWLmN0cmFkZS5tZXNzYWdl",
            "LkhlYWRlchI1CgRib2R5GAIgASgLMicuY3RyYWRlLm1lc3NhZ2UuQVBJT2Nv",
            "T3JkZXJTdW1pdFJlcXVlc3RCYAogY24uY29tLmNmZXRzLmRhdGEuY3RyYWRl",
            "Lm1lc3NhZ2VCIEFQSU9jb09yZGVyU3VtaXRSZXF1ZXN0TXNnUHJvYnVmgrUY",
            "GENUUkFERS1PUkRFUi1EQVRBLVNVQk1JVA=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::StandardReflection.Descriptor, global::Ctrade.Message.HeaderReflection.Descriptor, global::Ctrade.Message.UserReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Ctrade.Message.APIOcoSingleOrderMsg), global::Ctrade.Message.APIOcoSingleOrderMsg.Parser, new[]{ "Symbol", "Instrument", "DealDir", "OrderType", "Price", "OrderQty" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ctrade.Message.APIOcoOrderSumitRequest), global::Ctrade.Message.APIOcoOrderSumitRequest.Parser, new[]{ "Mkt", "ExpireTm", "MarketIndicator", "InstScopeSecurityType", "OrderReqId", "Orders", "Usr" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ctrade.Message.APIOcoOrderSumitRequestMsg), global::Ctrade.Message.APIOcoOrderSumitRequestMsg.Parser, new[]{ "Header", "Body" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///required string order_req_id = 1; /// 订单操作参考序号
  /// </summary>
  public sealed partial class APIOcoSingleOrderMsg : pb::IMessage<APIOcoSingleOrderMsg> {
    private static readonly pb::MessageParser<APIOcoSingleOrderMsg> _parser = new pb::MessageParser<APIOcoSingleOrderMsg>(() => new APIOcoSingleOrderMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<APIOcoSingleOrderMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ctrade.Message.APIOcoOrderSumitRequestMsgReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APIOcoSingleOrderMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APIOcoSingleOrderMsg(APIOcoSingleOrderMsg other) : this() {
      _hasBits0 = other._hasBits0;
      symbol_ = other.symbol_;
      instrument_ = other.instrument_;
      dealDir_ = other.dealDir_;
      orderType_ = other.orderType_;
      price_ = other.price_;
      orderQty_ = other.orderQty_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APIOcoSingleOrderMsg Clone() {
      return new APIOcoSingleOrderMsg(this);
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 1;
    private readonly static string SymbolDefaultValue = global::System.Text.Encoding.UTF8.GetString(global::System.Convert.FromBase64String("VVNELkNOWQ=="), 0, 7);

    private string symbol_;
    /// <summary>
    //// 货币对
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_ ?? SymbolDefaultValue; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "symbol" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSymbol {
      get { return symbol_ != null; }
    }
    /// <summary>Clears the value of the "symbol" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSymbol() {
      symbol_ = null;
    }

    /// <summary>Field number for the "instrument" field.</summary>
    public const int InstrumentFieldNumber = 2;
    private readonly static string InstrumentDefaultValue = "";

    private string instrument_;
    /// <summary>
    ////合约品种
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Instrument {
      get { return instrument_ ?? InstrumentDefaultValue; }
      set {
        instrument_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "instrument" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInstrument {
      get { return instrument_ != null; }
    }
    /// <summary>Clears the value of the "instrument" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInstrument() {
      instrument_ = null;
    }

    /// <summary>Field number for the "deal_dir" field.</summary>
    public const int DealDirFieldNumber = 3;
    private readonly static int DealDirDefaultValue = 0;

    private int dealDir_;
    /// <summary>
    ////交易方向
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DealDir {
      get { if ((_hasBits0 & 1) != 0) { return dealDir_; } else { return DealDirDefaultValue; } }
      set {
        _hasBits0 |= 1;
        dealDir_ = value;
      }
    }
    /// <summary>Gets whether the "deal_dir" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDealDir {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "deal_dir" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDealDir() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "order_type" field.</summary>
    public const int OrderTypeFieldNumber = 4;
    private readonly static string OrderTypeDefaultValue = "";

    private string orderType_;
    /// <summary>
    ////订单类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderType {
      get { return orderType_ ?? OrderTypeDefaultValue; }
      set {
        orderType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "order_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOrderType {
      get { return orderType_ != null; }
    }
    /// <summary>Clears the value of the "order_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOrderType() {
      orderType_ = null;
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 5;
    private readonly static long PriceDefaultValue = 0L;

    private long price_;
    /// <summary>
    ///optional string expire_time = 8; ///有效时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Price {
      get { if ((_hasBits0 & 2) != 0) { return price_; } else { return PriceDefaultValue; } }
      set {
        _hasBits0 |= 2;
        price_ = value;
      }
    }
    /// <summary>Gets whether the "price" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPrice {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "price" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPrice() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "order_qty" field.</summary>
    public const int OrderQtyFieldNumber = 6;
    private readonly static long OrderQtyDefaultValue = 0L;

    private long orderQty_;
    /// <summary>
    ////报价量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OrderQty {
      get { if ((_hasBits0 & 4) != 0) { return orderQty_; } else { return OrderQtyDefaultValue; } }
      set {
        _hasBits0 |= 4;
        orderQty_ = value;
      }
    }
    /// <summary>Gets whether the "order_qty" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOrderQty {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "order_qty" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOrderQty() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as APIOcoSingleOrderMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(APIOcoSingleOrderMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Symbol != other.Symbol) return false;
      if (Instrument != other.Instrument) return false;
      if (DealDir != other.DealDir) return false;
      if (OrderType != other.OrderType) return false;
      if (Price != other.Price) return false;
      if (OrderQty != other.OrderQty) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSymbol) hash ^= Symbol.GetHashCode();
      if (HasInstrument) hash ^= Instrument.GetHashCode();
      if (HasDealDir) hash ^= DealDir.GetHashCode();
      if (HasOrderType) hash ^= OrderType.GetHashCode();
      if (HasPrice) hash ^= Price.GetHashCode();
      if (HasOrderQty) hash ^= OrderQty.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasSymbol) {
        output.WriteRawTag(10);
        output.WriteString(Symbol);
      }
      if (HasInstrument) {
        output.WriteRawTag(18);
        output.WriteString(Instrument);
      }
      if (HasDealDir) {
        output.WriteRawTag(24);
        output.WriteInt32(DealDir);
      }
      if (HasOrderType) {
        output.WriteRawTag(34);
        output.WriteString(OrderType);
      }
      if (HasPrice) {
        output.WriteRawTag(40);
        output.WriteInt64(Price);
      }
      if (HasOrderQty) {
        output.WriteRawTag(48);
        output.WriteInt64(OrderQty);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasSymbol) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (HasInstrument) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Instrument);
      }
      if (HasDealDir) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DealDir);
      }
      if (HasOrderType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderType);
      }
      if (HasPrice) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Price);
      }
      if (HasOrderQty) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OrderQty);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(APIOcoSingleOrderMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasSymbol) {
        Symbol = other.Symbol;
      }
      if (other.HasInstrument) {
        Instrument = other.Instrument;
      }
      if (other.HasDealDir) {
        DealDir = other.DealDir;
      }
      if (other.HasOrderType) {
        OrderType = other.OrderType;
      }
      if (other.HasPrice) {
        Price = other.Price;
      }
      if (other.HasOrderQty) {
        OrderQty = other.OrderQty;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Symbol = input.ReadString();
            break;
          }
          case 18: {
            Instrument = input.ReadString();
            break;
          }
          case 24: {
            DealDir = input.ReadInt32();
            break;
          }
          case 34: {
            OrderType = input.ReadString();
            break;
          }
          case 40: {
            Price = input.ReadInt64();
            break;
          }
          case 48: {
            OrderQty = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// OCO订单提交(ME)
  /// </summary>
  public sealed partial class APIOcoOrderSumitRequest : pb::IMessage<APIOcoOrderSumitRequest> {
    private static readonly pb::MessageParser<APIOcoOrderSumitRequest> _parser = new pb::MessageParser<APIOcoOrderSumitRequest>(() => new APIOcoOrderSumitRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<APIOcoOrderSumitRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ctrade.Message.APIOcoOrderSumitRequestMsgReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APIOcoOrderSumitRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APIOcoOrderSumitRequest(APIOcoOrderSumitRequest other) : this() {
      _hasBits0 = other._hasBits0;
      mkt_ = other.mkt_;
      expireTm_ = other.expireTm_;
      marketIndicator_ = other.marketIndicator_;
      instScopeSecurityType_ = other.instScopeSecurityType_;
      orderReqId_ = other.orderReqId_;
      orders_ = other.orders_.Clone();
      usr_ = other.usr_ != null ? other.usr_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APIOcoOrderSumitRequest Clone() {
      return new APIOcoOrderSumitRequest(this);
    }

    /// <summary>Field number for the "mkt" field.</summary>
    public const int MktFieldNumber = 1;
    private readonly static int MktDefaultValue = 0;

    private int mkt_;
    /// <summary>
    /// 市场标识
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Mkt {
      get { if ((_hasBits0 & 1) != 0) { return mkt_; } else { return MktDefaultValue; } }
      set {
        _hasBits0 |= 1;
        mkt_ = value;
      }
    }
    /// <summary>Gets whether the "mkt" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMkt {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "mkt" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMkt() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "expire_tm" field.</summary>
    public const int ExpireTmFieldNumber = 2;
    private readonly static string ExpireTmDefaultValue = "";

    private string expireTm_;
    /// <summary>
    ///required int32 expire_tp = 2;				// 到期时间类型
    ///required int32 expire_min = 3;				// 订单有效时长
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExpireTm {
      get { return expireTm_ ?? ExpireTmDefaultValue; }
      set {
        expireTm_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "expire_tm" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExpireTm {
      get { return expireTm_ != null; }
    }
    /// <summary>Clears the value of the "expire_tm" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExpireTm() {
      expireTm_ = null;
    }

    /// <summary>Field number for the "market_indicator" field.</summary>
    public const int MarketIndicatorFieldNumber = 3;
    private readonly static string MarketIndicatorDefaultValue = global::System.Text.Encoding.UTF8.GetString(global::System.Convert.FromBase64String("MTE="), 0, 2);

    private string marketIndicator_;
    /// <summary>
    //// 金融工具
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MarketIndicator {
      get { return marketIndicator_ ?? MarketIndicatorDefaultValue; }
      set {
        marketIndicator_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "market_indicator" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMarketIndicator {
      get { return marketIndicator_ != null; }
    }
    /// <summary>Clears the value of the "market_indicator" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMarketIndicator() {
      marketIndicator_ = null;
    }

    /// <summary>Field number for the "inst_scope_security_type" field.</summary>
    public const int InstScopeSecurityTypeFieldNumber = 4;
    private readonly static string InstScopeSecurityTypeDefaultValue = global::System.Text.Encoding.UTF8.GetString(global::System.Convert.FromBase64String("RlhTV0FQ"), 0, 6);

    private string instScopeSecurityType_;
    /// <summary>
    //// 金融工具
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InstScopeSecurityType {
      get { return instScopeSecurityType_ ?? InstScopeSecurityTypeDefaultValue; }
      set {
        instScopeSecurityType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "inst_scope_security_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInstScopeSecurityType {
      get { return instScopeSecurityType_ != null; }
    }
    /// <summary>Clears the value of the "inst_scope_security_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInstScopeSecurityType() {
      instScopeSecurityType_ = null;
    }

    /// <summary>Field number for the "order_req_id" field.</summary>
    public const int OrderReqIdFieldNumber = 5;
    private readonly static string OrderReqIdDefaultValue = "";

    private string orderReqId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderReqId {
      get { return orderReqId_ ?? OrderReqIdDefaultValue; }
      set {
        orderReqId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "order_req_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOrderReqId {
      get { return orderReqId_ != null; }
    }
    /// <summary>Clears the value of the "order_req_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOrderReqId() {
      orderReqId_ = null;
    }

    /// <summary>Field number for the "orders" field.</summary>
    public const int OrdersFieldNumber = 98;
    private static readonly pb::FieldCodec<global::Ctrade.Message.APIOcoSingleOrderMsg> _repeated_orders_codec
        = pb::FieldCodec.ForMessage(786, global::Ctrade.Message.APIOcoSingleOrderMsg.Parser);
    private readonly pbc::RepeatedField<global::Ctrade.Message.APIOcoSingleOrderMsg> orders_ = new pbc::RepeatedField<global::Ctrade.Message.APIOcoSingleOrderMsg>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ctrade.Message.APIOcoSingleOrderMsg> Orders {
      get { return orders_; }
    }

    /// <summary>Field number for the "usr" field.</summary>
    public const int UsrFieldNumber = 100;
    private global::Ctrade.Message.User usr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ctrade.Message.User Usr {
      get { return usr_; }
      set {
        usr_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as APIOcoOrderSumitRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(APIOcoOrderSumitRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Mkt != other.Mkt) return false;
      if (ExpireTm != other.ExpireTm) return false;
      if (MarketIndicator != other.MarketIndicator) return false;
      if (InstScopeSecurityType != other.InstScopeSecurityType) return false;
      if (OrderReqId != other.OrderReqId) return false;
      if(!orders_.Equals(other.orders_)) return false;
      if (!object.Equals(Usr, other.Usr)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMkt) hash ^= Mkt.GetHashCode();
      if (HasExpireTm) hash ^= ExpireTm.GetHashCode();
      if (HasMarketIndicator) hash ^= MarketIndicator.GetHashCode();
      if (HasInstScopeSecurityType) hash ^= InstScopeSecurityType.GetHashCode();
      if (HasOrderReqId) hash ^= OrderReqId.GetHashCode();
      hash ^= orders_.GetHashCode();
      if (usr_ != null) hash ^= Usr.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasMkt) {
        output.WriteRawTag(8);
        output.WriteInt32(Mkt);
      }
      if (HasExpireTm) {
        output.WriteRawTag(18);
        output.WriteString(ExpireTm);
      }
      if (HasMarketIndicator) {
        output.WriteRawTag(26);
        output.WriteString(MarketIndicator);
      }
      if (HasInstScopeSecurityType) {
        output.WriteRawTag(34);
        output.WriteString(InstScopeSecurityType);
      }
      if (HasOrderReqId) {
        output.WriteRawTag(42);
        output.WriteString(OrderReqId);
      }
      orders_.WriteTo(output, _repeated_orders_codec);
      if (usr_ != null) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(Usr);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMkt) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Mkt);
      }
      if (HasExpireTm) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExpireTm);
      }
      if (HasMarketIndicator) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MarketIndicator);
      }
      if (HasInstScopeSecurityType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstScopeSecurityType);
      }
      if (HasOrderReqId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderReqId);
      }
      size += orders_.CalculateSize(_repeated_orders_codec);
      if (usr_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Usr);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(APIOcoOrderSumitRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasMkt) {
        Mkt = other.Mkt;
      }
      if (other.HasExpireTm) {
        ExpireTm = other.ExpireTm;
      }
      if (other.HasMarketIndicator) {
        MarketIndicator = other.MarketIndicator;
      }
      if (other.HasInstScopeSecurityType) {
        InstScopeSecurityType = other.InstScopeSecurityType;
      }
      if (other.HasOrderReqId) {
        OrderReqId = other.OrderReqId;
      }
      orders_.Add(other.orders_);
      if (other.usr_ != null) {
        if (usr_ == null) {
          Usr = new global::Ctrade.Message.User();
        }
        Usr.MergeFrom(other.Usr);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Mkt = input.ReadInt32();
            break;
          }
          case 18: {
            ExpireTm = input.ReadString();
            break;
          }
          case 26: {
            MarketIndicator = input.ReadString();
            break;
          }
          case 34: {
            InstScopeSecurityType = input.ReadString();
            break;
          }
          case 42: {
            OrderReqId = input.ReadString();
            break;
          }
          case 786: {
            orders_.AddEntriesFrom(input, _repeated_orders_codec);
            break;
          }
          case 802: {
            if (usr_ == null) {
              Usr = new global::Ctrade.Message.User();
            }
            input.ReadMessage(Usr);
            break;
          }
        }
      }
    }

  }

  public sealed partial class APIOcoOrderSumitRequestMsg : pb::IMessage<APIOcoOrderSumitRequestMsg> {
    private static readonly pb::MessageParser<APIOcoOrderSumitRequestMsg> _parser = new pb::MessageParser<APIOcoOrderSumitRequestMsg>(() => new APIOcoOrderSumitRequestMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<APIOcoOrderSumitRequestMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ctrade.Message.APIOcoOrderSumitRequestMsgReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APIOcoOrderSumitRequestMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APIOcoOrderSumitRequestMsg(APIOcoOrderSumitRequestMsg other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      body_ = other.body_ != null ? other.body_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APIOcoOrderSumitRequestMsg Clone() {
      return new APIOcoOrderSumitRequestMsg(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Ctrade.Message.Header header_;
    /// <summary>
    ///TODO 待确定
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ctrade.Message.Header Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 2;
    private global::Ctrade.Message.APIOcoOrderSumitRequest body_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ctrade.Message.APIOcoOrderSumitRequest Body {
      get { return body_; }
      set {
        body_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as APIOcoOrderSumitRequestMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(APIOcoOrderSumitRequestMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (!object.Equals(Body, other.Body)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (body_ != null) hash ^= Body.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (body_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Body);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (body_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Body);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(APIOcoOrderSumitRequestMsg other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Ctrade.Message.Header();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.body_ != null) {
        if (body_ == null) {
          Body = new global::Ctrade.Message.APIOcoOrderSumitRequest();
        }
        Body.MergeFrom(other.Body);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Ctrade.Message.Header();
            }
            input.ReadMessage(Header);
            break;
          }
          case 18: {
            if (body_ == null) {
              Body = new global::Ctrade.Message.APIOcoOrderSumitRequest();
            }
            input.ReadMessage(Body);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
