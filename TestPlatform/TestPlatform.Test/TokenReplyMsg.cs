// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: TokenReplyMsg.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Ctrade.Message {

  /// <summary>Holder for reflection information generated from TokenReplyMsg.proto</summary>
  public static partial class TokenReplyMsgReflection {

    #region Descriptor
    /// <summary>File descriptor for TokenReplyMsg.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TokenReplyMsgReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNUb2tlblJlcGx5TXNnLnByb3RvEg5jdHJhZGUubWVzc2FnZRoOc3RhbmRh",
            "cmQucHJvdG8aDEhlYWRlci5wcm90bxoKVXNlci5wcm90byKGAQoKVG9rZW5S",
            "ZXBseRIRCgl1c2VyX25hbWUYASACKAkSEwoLdXNlcl9zdGF0dXMYAiACKAUS",
            "GAoQdXNlcl9zdGF0dXNfdGV4dBgDIAEoCRISCgpyZXF1ZXN0X2lkGAQgAigJ",
            "EiIKBHVzZXIYZCACKAsyFC5jdHJhZGUubWVzc2FnZS5Vc2VyImEKDVRva2Vu",
            "UmVwbHlNc2cSJgoGaGVhZGVyGAEgASgLMhYuY3RyYWRlLm1lc3NhZ2UuSGVh",
            "ZGVyEigKBGJvZHkYAiABKAsyGi5jdHJhZGUubWVzc2FnZS5Ub2tlblJlcGx5",
            "QlIKFWNuLmNvbS5jZmV0cy5kYXRhLm1zZ0ITVG9rZW5SZXBseU1zZ1Byb2J1",
            "ZoK1GBFDVFJBREUtT1JERVItREFUQYq1GA1Ub2tlblJlcGx5TXNn"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::StandardReflection.Descriptor, global::Ctrade.Message.HeaderReflection.Descriptor, global::Ctrade.Message.UserReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Ctrade.Message.TokenReply), global::Ctrade.Message.TokenReply.Parser, new[]{ "UserName", "UserStatus", "UserStatusText", "RequestId", "User" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ctrade.Message.TokenReplyMsg), global::Ctrade.Message.TokenReplyMsg.Parser, new[]{ "Header", "Body" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  //// Token反馈
  /// </summary>
  public sealed partial class TokenReply : pb::IMessage<TokenReply> {
    private static readonly pb::MessageParser<TokenReply> _parser = new pb::MessageParser<TokenReply>(() => new TokenReply());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TokenReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ctrade.Message.TokenReplyMsgReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenReply(TokenReply other) : this() {
      _hasBits0 = other._hasBits0;
      userName_ = other.userName_;
      userStatus_ = other.userStatus_;
      userStatusText_ = other.userStatusText_;
      requestId_ = other.requestId_;
      user_ = other.user_ != null ? other.user_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenReply Clone() {
      return new TokenReply(this);
    }

    /// <summary>Field number for the "user_name" field.</summary>
    public const int UserNameFieldNumber = 1;
    private readonly static string UserNameDefaultValue = "";

    private string userName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_ ?? UserNameDefaultValue; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "user_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserName {
      get { return userName_ != null; }
    }
    /// <summary>Clears the value of the "user_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserName() {
      userName_ = null;
    }

    /// <summary>Field number for the "user_status" field.</summary>
    public const int UserStatusFieldNumber = 2;
    private readonly static int UserStatusDefaultValue = 0;

    private int userStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserStatus {
      get { if ((_hasBits0 & 1) != 0) { return userStatus_; } else { return UserStatusDefaultValue; } }
      set {
        _hasBits0 |= 1;
        userStatus_ = value;
      }
    }
    /// <summary>Gets whether the "user_status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserStatus {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "user_status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserStatus() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "user_status_text" field.</summary>
    public const int UserStatusTextFieldNumber = 3;
    private readonly static string UserStatusTextDefaultValue = "";

    private string userStatusText_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserStatusText {
      get { return userStatusText_ ?? UserStatusTextDefaultValue; }
      set {
        userStatusText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "user_status_text" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserStatusText {
      get { return userStatusText_ != null; }
    }
    /// <summary>Clears the value of the "user_status_text" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserStatusText() {
      userStatusText_ = null;
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 4;
    private readonly static string RequestIdDefaultValue = "";

    private string requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestId {
      get { return requestId_ ?? RequestIdDefaultValue; }
      set {
        requestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "request_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRequestId {
      get { return requestId_ != null; }
    }
    /// <summary>Clears the value of the "request_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRequestId() {
      requestId_ = null;
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 100;
    private global::Ctrade.Message.User user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ctrade.Message.User User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TokenReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TokenReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserName != other.UserName) return false;
      if (UserStatus != other.UserStatus) return false;
      if (UserStatusText != other.UserStatusText) return false;
      if (RequestId != other.RequestId) return false;
      if (!object.Equals(User, other.User)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUserName) hash ^= UserName.GetHashCode();
      if (HasUserStatus) hash ^= UserStatus.GetHashCode();
      if (HasUserStatusText) hash ^= UserStatusText.GetHashCode();
      if (HasRequestId) hash ^= RequestId.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasUserName) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
      if (HasUserStatus) {
        output.WriteRawTag(16);
        output.WriteInt32(UserStatus);
      }
      if (HasUserStatusText) {
        output.WriteRawTag(26);
        output.WriteString(UserStatusText);
      }
      if (HasRequestId) {
        output.WriteRawTag(34);
        output.WriteString(RequestId);
      }
      if (user_ != null) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(User);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUserName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (HasUserStatus) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserStatus);
      }
      if (HasUserStatusText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserStatusText);
      }
      if (HasRequestId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestId);
      }
      if (user_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TokenReply other) {
      if (other == null) {
        return;
      }
      if (other.HasUserName) {
        UserName = other.UserName;
      }
      if (other.HasUserStatus) {
        UserStatus = other.UserStatus;
      }
      if (other.HasUserStatusText) {
        UserStatusText = other.UserStatusText;
      }
      if (other.HasRequestId) {
        RequestId = other.RequestId;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          User = new global::Ctrade.Message.User();
        }
        User.MergeFrom(other.User);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 16: {
            UserStatus = input.ReadInt32();
            break;
          }
          case 26: {
            UserStatusText = input.ReadString();
            break;
          }
          case 34: {
            RequestId = input.ReadString();
            break;
          }
          case 802: {
            if (user_ == null) {
              User = new global::Ctrade.Message.User();
            }
            input.ReadMessage(User);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TokenReplyMsg : pb::IMessage<TokenReplyMsg> {
    private static readonly pb::MessageParser<TokenReplyMsg> _parser = new pb::MessageParser<TokenReplyMsg>(() => new TokenReplyMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TokenReplyMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ctrade.Message.TokenReplyMsgReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenReplyMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenReplyMsg(TokenReplyMsg other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      body_ = other.body_ != null ? other.body_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenReplyMsg Clone() {
      return new TokenReplyMsg(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Ctrade.Message.Header header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ctrade.Message.Header Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 2;
    private global::Ctrade.Message.TokenReply body_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ctrade.Message.TokenReply Body {
      get { return body_; }
      set {
        body_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TokenReplyMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TokenReplyMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (!object.Equals(Body, other.Body)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (body_ != null) hash ^= Body.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (body_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Body);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (body_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Body);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TokenReplyMsg other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Ctrade.Message.Header();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.body_ != null) {
        if (body_ == null) {
          Body = new global::Ctrade.Message.TokenReply();
        }
        Body.MergeFrom(other.Body);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Ctrade.Message.Header();
            }
            input.ReadMessage(Header);
            break;
          }
          case 18: {
            if (body_ == null) {
              Body = new global::Ctrade.Message.TokenReply();
            }
            input.ReadMessage(Body);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
