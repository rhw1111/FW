// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: APIOrderSubmitReplyMsg.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Ctrade.Message {

  /// <summary>Holder for reflection information generated from APIOrderSubmitReplyMsg.proto</summary>
  public static partial class APIOrderSubmitReplyMsgReflection {

    #region Descriptor
    /// <summary>File descriptor for APIOrderSubmitReplyMsg.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static APIOrderSubmitReplyMsgReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxBUElPcmRlclN1Ym1pdFJlcGx5TXNnLnByb3RvEg5jdHJhZGUubWVzc2Fn",
            "ZRoOc3RhbmRhcmQucHJvdG8aDEhlYWRlci5wcm90bxoKVXNlci5wcm90byLD",
            "AQoTQVBJT3JkZXJTdWJtaXRSZXBseRIVCg1FeGVjQWNrU3RhdHVzGAEgAigJ",
            "Eg8KB09yZGVySUQYAiABKAkSFAoMT3JkZXJfcmVxX2lkGAMgAigJEhMKC2V4",
            "ZWNfb3JnX2lkGAQgAigJEhQKDGV4ZWNfdXNlcl9pZBgFIAIoCRIRCgl0cmFu",
            "X3RpbWUYBiABKAkSDAoEVGV4dBgHIAEoCRIiCgR1c2VyGGQgAigLMhQuY3Ry",
            "YWRlLm1lc3NhZ2UuVXNlciJzChZBUElPcmRlclN1Ym1pdFJlcGx5TXNnEiYK",
            "BmhlYWRlchgBIAEoCzIWLmN0cmFkZS5tZXNzYWdlLkhlYWRlchIxCgRib2R5",
            "GAIgASgLMiMuY3RyYWRlLm1lc3NhZ2UuQVBJT3JkZXJTdWJtaXRSZXBseUJi",
            "CiBjbi5jb20uY2ZldHMuZGF0YS5jdHJhZGUubWVzc2FnZUIcQVBJT3JkZXJT",
            "dWJtaXRSZXBseU1zZ1Byb2J1ZoK1GB5DVFJBREUtT1JERVItREFUQS1TVUJN",
            "SVQtUkVQTFk="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::StandardReflection.Descriptor, global::Ctrade.Message.HeaderReflection.Descriptor, global::Ctrade.Message.UserReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Ctrade.Message.APIOrderSubmitReply), global::Ctrade.Message.APIOrderSubmitReply.Parser, new[]{ "ExecAckStatus", "OrderID", "OrderReqId", "ExecOrgId", "ExecUserId", "TranTime", "Text", "User" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ctrade.Message.APIOrderSubmitReplyMsg), global::Ctrade.Message.APIOrderSubmitReplyMsg.Parser, new[]{ "Header", "Body" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 订单提交反馈
  /// </summary>
  public sealed partial class APIOrderSubmitReply : pb::IMessage<APIOrderSubmitReply> {
    private static readonly pb::MessageParser<APIOrderSubmitReply> _parser = new pb::MessageParser<APIOrderSubmitReply>(() => new APIOrderSubmitReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<APIOrderSubmitReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ctrade.Message.APIOrderSubmitReplyMsgReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APIOrderSubmitReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APIOrderSubmitReply(APIOrderSubmitReply other) : this() {
      execAckStatus_ = other.execAckStatus_;
      orderID_ = other.orderID_;
      orderReqId_ = other.orderReqId_;
      execOrgId_ = other.execOrgId_;
      execUserId_ = other.execUserId_;
      tranTime_ = other.tranTime_;
      text_ = other.text_;
      user_ = other.user_ != null ? other.user_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APIOrderSubmitReply Clone() {
      return new APIOrderSubmitReply(this);
    }

    /// <summary>Field number for the "ExecAckStatus" field.</summary>
    public const int ExecAckStatusFieldNumber = 1;
    private readonly static string ExecAckStatusDefaultValue = "";

    private string execAckStatus_;
    /// <summary>
    ////处理结果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExecAckStatus {
      get { return execAckStatus_ ?? ExecAckStatusDefaultValue; }
      set {
        execAckStatus_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ExecAckStatus" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExecAckStatus {
      get { return execAckStatus_ != null; }
    }
    /// <summary>Clears the value of the "ExecAckStatus" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExecAckStatus() {
      execAckStatus_ = null;
    }

    /// <summary>Field number for the "OrderID" field.</summary>
    public const int OrderIDFieldNumber = 2;
    private readonly static string OrderIDDefaultValue = "";

    private string orderID_;
    /// <summary>
    ////订单编号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderID {
      get { return orderID_ ?? OrderIDDefaultValue; }
      set {
        orderID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "OrderID" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOrderID {
      get { return orderID_ != null; }
    }
    /// <summary>Clears the value of the "OrderID" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOrderID() {
      orderID_ = null;
    }

    /// <summary>Field number for the "Order_req_id" field.</summary>
    public const int OrderReqIdFieldNumber = 3;
    private readonly static string OrderReqIdDefaultValue = "";

    private string orderReqId_;
    /// <summary>
    //// 订单操作参考序号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderReqId {
      get { return orderReqId_ ?? OrderReqIdDefaultValue; }
      set {
        orderReqId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "Order_req_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOrderReqId {
      get { return orderReqId_ != null; }
    }
    /// <summary>Clears the value of the "Order_req_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOrderReqId() {
      orderReqId_ = null;
    }

    /// <summary>Field number for the "exec_org_id" field.</summary>
    public const int ExecOrgIdFieldNumber = 4;
    private readonly static string ExecOrgIdDefaultValue = "";

    private string execOrgId_;
    /// <summary>
    ////执行方机构ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExecOrgId {
      get { return execOrgId_ ?? ExecOrgIdDefaultValue; }
      set {
        execOrgId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "exec_org_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExecOrgId {
      get { return execOrgId_ != null; }
    }
    /// <summary>Clears the value of the "exec_org_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExecOrgId() {
      execOrgId_ = null;
    }

    /// <summary>Field number for the "exec_user_id" field.</summary>
    public const int ExecUserIdFieldNumber = 5;
    private readonly static string ExecUserIdDefaultValue = "";

    private string execUserId_;
    /// <summary>
    ////执行方用户ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExecUserId {
      get { return execUserId_ ?? ExecUserIdDefaultValue; }
      set {
        execUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "exec_user_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExecUserId {
      get { return execUserId_ != null; }
    }
    /// <summary>Clears the value of the "exec_user_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExecUserId() {
      execUserId_ = null;
    }

    /// <summary>Field number for the "tran_time" field.</summary>
    public const int TranTimeFieldNumber = 6;
    private readonly static string TranTimeDefaultValue = "";

    private string tranTime_;
    /// <summary>
    ////激活时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TranTime {
      get { return tranTime_ ?? TranTimeDefaultValue; }
      set {
        tranTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tran_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTranTime {
      get { return tranTime_ != null; }
    }
    /// <summary>Clears the value of the "tran_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTranTime() {
      tranTime_ = null;
    }

    /// <summary>Field number for the "Text" field.</summary>
    public const int TextFieldNumber = 7;
    private readonly static string TextDefaultValue = "";

    private string text_;
    /// <summary>
    ////失败原因
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_ ?? TextDefaultValue; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "Text" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasText {
      get { return text_ != null; }
    }
    /// <summary>Clears the value of the "Text" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearText() {
      text_ = null;
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 100;
    private global::Ctrade.Message.User user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ctrade.Message.User User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as APIOrderSubmitReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(APIOrderSubmitReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ExecAckStatus != other.ExecAckStatus) return false;
      if (OrderID != other.OrderID) return false;
      if (OrderReqId != other.OrderReqId) return false;
      if (ExecOrgId != other.ExecOrgId) return false;
      if (ExecUserId != other.ExecUserId) return false;
      if (TranTime != other.TranTime) return false;
      if (Text != other.Text) return false;
      if (!object.Equals(User, other.User)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasExecAckStatus) hash ^= ExecAckStatus.GetHashCode();
      if (HasOrderID) hash ^= OrderID.GetHashCode();
      if (HasOrderReqId) hash ^= OrderReqId.GetHashCode();
      if (HasExecOrgId) hash ^= ExecOrgId.GetHashCode();
      if (HasExecUserId) hash ^= ExecUserId.GetHashCode();
      if (HasTranTime) hash ^= TranTime.GetHashCode();
      if (HasText) hash ^= Text.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasExecAckStatus) {
        output.WriteRawTag(10);
        output.WriteString(ExecAckStatus);
      }
      if (HasOrderID) {
        output.WriteRawTag(18);
        output.WriteString(OrderID);
      }
      if (HasOrderReqId) {
        output.WriteRawTag(26);
        output.WriteString(OrderReqId);
      }
      if (HasExecOrgId) {
        output.WriteRawTag(34);
        output.WriteString(ExecOrgId);
      }
      if (HasExecUserId) {
        output.WriteRawTag(42);
        output.WriteString(ExecUserId);
      }
      if (HasTranTime) {
        output.WriteRawTag(50);
        output.WriteString(TranTime);
      }
      if (HasText) {
        output.WriteRawTag(58);
        output.WriteString(Text);
      }
      if (user_ != null) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(User);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasExecAckStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExecAckStatus);
      }
      if (HasOrderID) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderID);
      }
      if (HasOrderReqId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderReqId);
      }
      if (HasExecOrgId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExecOrgId);
      }
      if (HasExecUserId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExecUserId);
      }
      if (HasTranTime) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TranTime);
      }
      if (HasText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (user_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(APIOrderSubmitReply other) {
      if (other == null) {
        return;
      }
      if (other.HasExecAckStatus) {
        ExecAckStatus = other.ExecAckStatus;
      }
      if (other.HasOrderID) {
        OrderID = other.OrderID;
      }
      if (other.HasOrderReqId) {
        OrderReqId = other.OrderReqId;
      }
      if (other.HasExecOrgId) {
        ExecOrgId = other.ExecOrgId;
      }
      if (other.HasExecUserId) {
        ExecUserId = other.ExecUserId;
      }
      if (other.HasTranTime) {
        TranTime = other.TranTime;
      }
      if (other.HasText) {
        Text = other.Text;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          User = new global::Ctrade.Message.User();
        }
        User.MergeFrom(other.User);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ExecAckStatus = input.ReadString();
            break;
          }
          case 18: {
            OrderID = input.ReadString();
            break;
          }
          case 26: {
            OrderReqId = input.ReadString();
            break;
          }
          case 34: {
            ExecOrgId = input.ReadString();
            break;
          }
          case 42: {
            ExecUserId = input.ReadString();
            break;
          }
          case 50: {
            TranTime = input.ReadString();
            break;
          }
          case 58: {
            Text = input.ReadString();
            break;
          }
          case 802: {
            if (user_ == null) {
              User = new global::Ctrade.Message.User();
            }
            input.ReadMessage(User);
            break;
          }
        }
      }
    }

  }

  public sealed partial class APIOrderSubmitReplyMsg : pb::IMessage<APIOrderSubmitReplyMsg> {
    private static readonly pb::MessageParser<APIOrderSubmitReplyMsg> _parser = new pb::MessageParser<APIOrderSubmitReplyMsg>(() => new APIOrderSubmitReplyMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<APIOrderSubmitReplyMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ctrade.Message.APIOrderSubmitReplyMsgReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APIOrderSubmitReplyMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APIOrderSubmitReplyMsg(APIOrderSubmitReplyMsg other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      body_ = other.body_ != null ? other.body_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APIOrderSubmitReplyMsg Clone() {
      return new APIOrderSubmitReplyMsg(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Ctrade.Message.Header header_;
    /// <summary>
    ///TODO 待确定
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ctrade.Message.Header Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 2;
    private global::Ctrade.Message.APIOrderSubmitReply body_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ctrade.Message.APIOrderSubmitReply Body {
      get { return body_; }
      set {
        body_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as APIOrderSubmitReplyMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(APIOrderSubmitReplyMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (!object.Equals(Body, other.Body)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (body_ != null) hash ^= Body.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (body_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Body);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (body_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Body);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(APIOrderSubmitReplyMsg other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Ctrade.Message.Header();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.body_ != null) {
        if (body_ == null) {
          Body = new global::Ctrade.Message.APIOrderSubmitReply();
        }
        Body.MergeFrom(other.Body);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Ctrade.Message.Header();
            }
            input.ReadMessage(Header);
            break;
          }
          case 18: {
            if (body_ == null) {
              Body = new global::Ctrade.Message.APIOrderSubmitReply();
            }
            input.ReadMessage(Body);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
