{"version":3,"sources":["webpack:///./src/pages/Directory/CopyDirectory.vue?d890","webpack:///./src/pages/Directory/index.vue?4f1d","webpack:///./src/pages/Directory/CopyDirectory.vue?8893","webpack:///src/pages/Directory/CopyDirectory.vue","webpack:///./src/pages/Directory/CopyDirectory.vue?14f9","webpack:///./src/pages/Directory/CopyDirectory.vue","webpack:///src/pages/Directory/index.vue","webpack:///./src/pages/Directory/index.vue?5e17","webpack:///./src/pages/Directory/index.vue","webpack:///./src/pages/Directory/index.vue?64b7","webpack:///./src/pages/TestDataSource/CreatePut.vue?6ac8","webpack:///src/pages/TestDataSource/CreatePut.vue","webpack:///./src/pages/TestDataSource/CreatePut.vue?fa96","webpack:///./src/pages/TestDataSource/CreatePut.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","directives","name","rawName","value","RecordDirectorySite","length","expression","on","toPrevLevel","returnToRoot","isSearchStatus","newFolderCreate","ChangeFileDirectory","ModifyFolderName","openCopyDirector","DeleteFolder","$event","createTestCaseFixed","createDataSourceFixed","staticStyle","scopedSlots","_u","key","fn","proxy","model","callback","$$v","searchText","FileType","searchFile","cancelSearch","_v","_s","currentDirectoryLocation","_l","index","toNextLevel","selection","type","_e","folderPage","folderPageCurrent","folderPageTotal","switchFolderPage","ChangeFileDirectoryFlag","ref","existingDirectories","SelectDirectoryLocation","newCancel","newCreate","newDataSourceCancel","newDataSourceCreate","LookDataSourceFixed","dataSourceDetail","cancelPutDataSource","putTestDataSource","copyDirectorFlag","copyOver","copyDirectorCreate","staticRenderFns","selectionArr","CopyTestCaseName","CopyTestCaseSlaveFlag","ChangeFileDirectoryName","props","components","TreeEntity","data","directorName","ChangeFileDirectoryId","ChangeFileDirectoryValue","dataStructure","FileList","mounted","console","log","$parent","methods","$refs","getDirectoryLocation","id","getTreeEntityTreePath","label","$q","notify","position","message","caption","color","loading","show","res","singleCopySelection","recheckingSelection","CopyTestCaseCreate","CopyTestDataSourceCreate","results","Name","Configuration","configuration","EngineType","engineType","MasterHostID","masterHostID","FolderID","getSlaveHostList","CopyCreateSlaveHost","SalveHostNum","SlaveHostList","$emit","hostID","slaveName","count","extensionInfo","Type","Data","i","push","originalNode","newNode","CreateDataStructureAndFiles","copyFile","copyFileNum","_this","ID","ParentID","copyFileValue","copyFolder","getTreeChildren","parentId","oldValue","matchName","page","pageSize","childrenArr","newValue","splice","filter","component","CreateShowTestCase","CreatePut","CopyDirector","FolderList","created","getEchoLocation","isParentChildren","JSON","parse","sessionStorage","getItem","Page","getTreeEntityList","removeItem","currentChange","pageCurrent","setItem","stringify","TypeFlag","trim","$router","query","getTestDataSourceDetail","dialog","title","persistent","ok","cancel","delFolder","delNum","hide","para","saveDirectory","prompt","UpdateFolder","putNum","CSTestCase","createDataSource","valueId","SelectedId","parentName","parentID","putDataSource","copyDirector","height","detailData","currentDirectory","isDataType","Number","isJSON","str","obj"],"mappings":"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","file":"js/chunk-c126444e.0ecf3f75.js","sourcesContent":["import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CopyDirectory.vue?vue&type=style&index=1&lang=scss&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CopyDirectory.vue?vue&type=style&index=1&lang=scss&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"column item-start\",attrs:{\"id\":\"Directory\"}},[_c('div',{staticClass:\"col-auto  detail_header row\"},[_c('div',{staticClass:\"col-7 col-md-7 row\"},[_c('q-btn',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.RecordDirectorySite.length!=0),expression:\"RecordDirectorySite.length!=0\"}],staticClass:\"btn\",attrs:{\"color\":\"primary\",\"label\":\"上一级\"},on:{\"click\":_vm.toPrevLevel}}),_c('q-btn',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.RecordDirectorySite.length!=0),expression:\"RecordDirectorySite.length!=0\"}],staticClass:\"btn\",attrs:{\"color\":\"primary\",\"label\":\"返回根目录\"},on:{\"click\":_vm.returnToRoot}}),_c('q-btn',{directives:[{name:\"show\",rawName:\"v-show\",value:((_vm.isSearchStatus && _vm.RecordDirectorySite.length!=0) || !_vm.isSearchStatus),expression:\"(isSearchStatus && RecordDirectorySite.length!=0) || !isSearchStatus\"}],staticClass:\"btn\",attrs:{\"color\":\"primary\",\"label\":\"新建目录\"},on:{\"click\":_vm.newFolderCreate}}),_c('q-btn',{staticClass:\"btn\",attrs:{\"color\":\"primary\",\"label\":\"移动目录\"},on:{\"click\":_vm.ChangeFileDirectory}}),_c('q-btn',{staticClass:\"btn\",attrs:{\"color\":\"primary\",\"label\":\"目录重命名\"},on:{\"click\":_vm.ModifyFolderName}}),_c('q-btn',{staticClass:\"btn\",attrs:{\"color\":\"primary\",\"label\":\"复制\"},on:{\"click\":_vm.openCopyDirector}}),_c('q-btn',{staticClass:\"btn\",attrs:{\"color\":\"red\",\"label\":\"删除\"},on:{\"click\":_vm.DeleteFolder}}),_c('q-btn',{directives:[{name:\"show\",rawName:\"v-show\",value:((_vm.isSearchStatus && _vm.RecordDirectorySite.length!=0) || !_vm.isSearchStatus),expression:\"(isSearchStatus && RecordDirectorySite.length!=0) || !isSearchStatus\"}],staticClass:\"btn\",attrs:{\"color\":\"primary\",\"label\":\"新建测试用例\"},on:{\"click\":function($event){_vm.createTestCaseFixed = true;}}}),_c('q-btn',{directives:[{name:\"show\",rawName:\"v-show\",value:((_vm.isSearchStatus && _vm.RecordDirectorySite.length!=0) || !_vm.isSearchStatus),expression:\"(isSearchStatus && RecordDirectorySite.length!=0) || !isSearchStatus\"}],staticClass:\"btn\",attrs:{\"color\":\"primary\",\"label\":\"新建测试数据源\"},on:{\"click\":function($event){_vm.createDataSourceFixed = true;}}})],1),_c('div',{staticClass:\"col-5 col-md-5  row\"},[_c('div',{staticClass:\"col-8 row\"},[_c('q-input',{staticClass:\"col-6\",staticStyle:{\"height\":\"40px\"},attrs:{\"outlined\":\"\",\"placeholder\":\"请输入文件名称\",\"type\":\"search\",\"dense\":true},scopedSlots:_vm._u([{key:\"append\",fn:function(){return [_c('q-icon',{attrs:{\"name\":\"search\"}})]},proxy:true}]),model:{value:(_vm.searchText),callback:function ($$v) {_vm.searchText=$$v},expression:\"searchText\"}}),_c('q-select',{staticClass:\"col-5\",staticStyle:{\"margin-left\":\"10px\",\"height\":\"40px\"},attrs:{\"options\":['目录','测试用例','测试数据源'],\"label\":\"类型\",\"outlined\":\"\",\"dense\":true},model:{value:(_vm.FileType),callback:function ($$v) {_vm.FileType=$$v},expression:\"FileType\"}})],1),_c('div',{staticClass:\"col-4 row\"},[_c('q-btn',{staticClass:\"btn col-4\",attrs:{\"color\":\"primary\",\"label\":\"搜索\"},on:{\"click\":function($event){return _vm.searchFile(1,true)}}}),_c('q-btn',{staticClass:\"btn col-6\",attrs:{\"color\":\"primary\",\"label\":\"取消搜索\"},on:{\"click\":_vm.cancelSearch}})],1)])]),_c('div',{staticClass:\"col-auto  pathLocation q-pa-md\"},[_vm._v(\" \"+_vm._s(_vm.currentDirectoryLocation)+\" \")]),_c('div',{staticClass:\"col-9 col-md-8  folder\"},[_c('div',{staticClass:\"q-pa-md\"},[_c('div',{staticClass:\"Rootfolder\"},_vm._l((_vm.FolderList),function(value,index){return _c('div',{key:index,staticClass:\"Rootfolder_list\",attrs:{\"tag\":\"label\"},on:{\"dblclick\":function($event){return _vm.toNextLevel(value,true,1)}}},[_c('q-checkbox',{staticClass:\"checkbox\",attrs:{\"val\":value,\"dense\":true,\"label\":\"\"},model:{value:(_vm.selection),callback:function ($$v) {_vm.selection=$$v},expression:\"selection\"}}),(value.type==1)?_c('span',{staticClass:\"svg-container\"},[_c('svg',{staticClass:\"icon iconfolder\",attrs:{\"aria-hidden\":\"true\"}},[_c('use',{attrs:{\"xlink:href\":\"#icon-wenjianjia2\"}})])]):_vm._e(),(value.type==2)?_c('span',{staticClass:\"svg-container\"},[_c('svg',{staticClass:\"icon iconfolder\",attrs:{\"aria-hidden\":\"true\"}},[_c('use',{attrs:{\"xlink:href\":\"#icon--wenjian\"}})])]):_vm._e(),(value.type==3)?_c('span',{staticClass:\"svg-container\"},[_c('svg',{staticClass:\"icon iconfolder\",attrs:{\"aria-hidden\":\"true\"}},[_c('use',{attrs:{\"xlink:href\":\"#icon-shujuyuan\"}})])]):_vm._e(),_c('p',[_vm._v(_vm._s(value.name))])],1)}),0)])]),_c('div',{staticClass:\"folderList_page\"},[_c('el-pagination',{staticStyle:{\"float\":\"right\",\"margin-top\":\"10px\",\"margin-right\":\"5%\"},attrs:{\"background\":\"\",\"layout\":\"prev, pager, next\",\"current-page\":_vm.folderPage.folderPageCurrent,\"page-size\":100,\"total\":_vm.folderPage.folderPageTotal},on:{\"current-change\":_vm.switchFolderPage}})],1),_c('q-dialog',{attrs:{\"persistent\":\"\"},model:{value:(_vm.ChangeFileDirectoryFlag),callback:function ($$v) {_vm.ChangeFileDirectoryFlag=$$v},expression:\"ChangeFileDirectoryFlag\"}},[_c('q-card',{staticStyle:{\"width\":\"100%\"}},[_c('q-card-section',[_c('div',{staticClass:\"text-h6\"},[_vm._v(\"选择文件目录\")])]),_c('q-separator'),_c('TreeEntity',{ref:\"TreeEntity\",attrs:{\"existingDirectories\":_vm.existingDirectories}}),_c('q-separator'),_c('q-card-actions',{attrs:{\"align\":\"right\"}},[_c('q-btn',{attrs:{\"flat\":\"\",\"label\":\"取消\",\"color\":\"primary\"},on:{\"click\":function($event){_vm.ChangeFileDirectoryFlag = false;}}}),_c('q-btn',{attrs:{\"flat\":\"\",\"label\":\"确定\",\"color\":\"primary\"},on:{\"click\":_vm.SelectDirectoryLocation}})],1)],1)],1),_c('q-dialog',{attrs:{\"persistent\":\"\"},model:{value:(_vm.createTestCaseFixed),callback:function ($$v) {_vm.createTestCaseFixed=$$v},expression:\"createTestCaseFixed\"}},[_c('q-card',{staticStyle:{\"width\":\"100%\",\"max-width\":\"70vw\"}},[_c('q-card-section',[_c('div',{staticClass:\"text-h6\"},[_vm._v(\"创建测试用例\")])]),_c('q-separator'),_c('CreateShowTestCase',{ref:\"CSTestCase\",attrs:{\"currentDirectory\":_vm.RecordDirectorySite[_vm.RecordDirectorySite.length-1]}}),_c('q-separator'),_c('q-card-actions',{attrs:{\"align\":\"right\"}},[_c('q-btn',{attrs:{\"flat\":\"\",\"label\":\"取消\",\"color\":\"primary\"},on:{\"click\":_vm.newCancel}}),_c('q-btn',{attrs:{\"flat\":\"\",\"label\":\"创建\",\"color\":\"primary\"},on:{\"click\":_vm.newCreate}})],1)],1)],1),_c('q-dialog',{attrs:{\"persistent\":\"\"},model:{value:(_vm.createDataSourceFixed),callback:function ($$v) {_vm.createDataSourceFixed=$$v},expression:\"createDataSourceFixed\"}},[_c('q-card',{staticStyle:{\"width\":\"100%\",\"max-width\":\"70vw\"}},[_c('q-card-section',[_c('div',{staticClass:\"text-h6\"},[_vm._v(\"创建测试数据源\")])]),_c('q-separator'),_c('CreatePut',{ref:\"createDataSource\",attrs:{\"currentDirectory\":_vm.RecordDirectorySite[_vm.RecordDirectorySite.length-1]}}),_c('q-separator'),_c('q-card-actions',{attrs:{\"align\":\"right\"}},[_c('q-btn',{attrs:{\"flat\":\"\",\"label\":\"取消\",\"color\":\"primary\"},on:{\"click\":_vm.newDataSourceCancel}}),_c('q-btn',{attrs:{\"flat\":\"\",\"label\":\"创建\",\"color\":\"primary\"},on:{\"click\":_vm.newDataSourceCreate}})],1)],1)],1),_c('q-dialog',{attrs:{\"persistent\":\"\"},model:{value:(_vm.LookDataSourceFixed),callback:function ($$v) {_vm.LookDataSourceFixed=$$v},expression:\"LookDataSourceFixed\"}},[_c('q-card',{staticStyle:{\"width\":\"100%\",\"max-width\":\"70vw\"}},[_c('q-card-section',[_c('div',{staticClass:\"text-h6\"},[_vm._v(\"更新测试数据源\")])]),_c('q-separator'),_c('CreatePut',{ref:\"putDataSource\",attrs:{\"detailData\":_vm.dataSourceDetail}}),_c('q-separator'),_c('q-card-actions',{attrs:{\"align\":\"right\"}},[_c('q-btn',{attrs:{\"flat\":\"\",\"label\":\"取消\",\"color\":\"primary\"},on:{\"click\":_vm.cancelPutDataSource}}),_c('q-btn',{attrs:{\"flat\":\"\",\"label\":\"更新\",\"color\":\"primary\"},on:{\"click\":_vm.putTestDataSource}})],1)],1)],1),_c('q-dialog',{attrs:{\"persistent\":\"\"},model:{value:(_vm.copyDirectorFlag),callback:function ($$v) {_vm.copyDirectorFlag=$$v},expression:\"copyDirectorFlag\"}},[_c('q-card',{staticStyle:{\"width\":\"100%\",\"max-width\":\"70vw\"}},[_c('q-card-section',[_c('div',{staticClass:\"text-h6\"},[_vm._v(\"复制目录/文件\")])]),_c('q-separator'),_c('CopyDirector',{ref:\"copyDirector\",attrs:{\"selection\":_vm.selection,\"existingDirectories\":_vm.existingDirectories},on:{\"copyOver\":_vm.copyOver}}),_c('q-separator'),_c('q-card-actions',{attrs:{\"align\":\"right\"}},[_c('q-btn',{attrs:{\"flat\":\"\",\"label\":\"取消\",\"color\":\"primary\"},on:{\"click\":function($event){_vm.copyDirectorFlag = false}}}),_c('q-btn',{attrs:{\"flat\":\"\",\"label\":\"复制\",\"color\":\"primary\"},on:{\"click\":_vm.copyDirectorCreate}})],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"new_input\"},[_c('q-dialog',{attrs:{\"persistent\":\"\"},model:{value:(_vm.ChangeFileDirectoryFlag),callback:function ($$v) {_vm.ChangeFileDirectoryFlag=$$v},expression:\"ChangeFileDirectoryFlag\"}},[_c('q-card',{staticStyle:{\"width\":\"100%\"}},[_c('q-card-section',[_c('div',{staticClass:\"text-h6\"},[_vm._v(\"选择文件目录\")])]),_c('q-separator'),_c('TreeEntity',{ref:\"TreeEntity\",attrs:{\"existingDirectories\":_vm.existingDirectories}}),_c('q-separator'),_c('q-card-actions',{attrs:{\"align\":\"right\"}},[_c('q-btn',{attrs:{\"flat\":\"\",\"label\":\"取消\",\"color\":\"primary\"},on:{\"click\":function($event){_vm.ChangeFileDirectoryFlag = false}}}),_c('q-btn',{attrs:{\"flat\":\"\",\"label\":\"确定\",\"color\":\"primary\"},on:{\"click\":_vm.SelectDirectoryLocation}})],1)],1)],1),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.selectionArr.length == 1),expression:\"selectionArr.length == 1\"}],staticClass:\"row input_row\"},[_c('q-input',{staticClass:\"col\",attrs:{\"dense\":false},scopedSlots:_vm._u([{key:\"before\",fn:function(){return [_c('span',{staticStyle:{\"font-size\":\"14px\"}},[_vm._v(\"名称:\")])]},proxy:true}]),model:{value:(_vm.CopyTestCaseName),callback:function ($$v) {_vm.CopyTestCaseName=$$v},expression:\"CopyTestCaseName\"}}),_c('q-select',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.selectionArr[0].type == 2),expression:\"selectionArr[0].type == 2\"}],staticClass:\"col\",attrs:{\"options\":['是','否'],\"dense\":false},scopedSlots:_vm._u([{key:\"before\",fn:function(){return [_c('span',{staticStyle:{\"font-size\":\"14px\"}},[_vm._v(\"是否复制从主机:\")])]},proxy:true},{key:\"prepend\",fn:function(){return undefined},proxy:true}]),model:{value:(_vm.CopyTestCaseSlaveFlag),callback:function ($$v) {_vm.CopyTestCaseSlaveFlag=$$v},expression:\"CopyTestCaseSlaveFlag\"}})],1),_c('div',{staticClass:\"row input_row\"},[_c('q-input',{staticClass:\"col\",attrs:{\"dense\":false,\"readonly\":\"\",\"placeholder\":\"点击右侧加号选择文件要复制到哪个目录\"},scopedSlots:_vm._u([{key:\"before\",fn:function(){return [_c('span',{staticStyle:{\"font-size\":\"14px\"}},[_vm._v(\"文件目录位置:\")])]},proxy:true},{key:\"append\",fn:function(){return [_c('q-btn',{attrs:{\"round\":\"\",\"dense\":\"\",\"flat\":\"\",\"icon\":\"add\"},on:{\"click\":_vm.ChangeFileDirectory}})]},proxy:true}]),model:{value:(_vm.ChangeFileDirectoryName),callback:function ($$v) {_vm.ChangeFileDirectoryName=$$v},expression:\"ChangeFileDirectoryName\"}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"new_input\">\r\n    <!-- 更改文件目录 -->\r\n    <q-dialog v-model=\"ChangeFileDirectoryFlag\"\r\n              persistent>\r\n      <q-card style=\"width: 100%;\">\r\n        <q-card-section>\r\n          <div class=\"text-h6\">选择文件目录</div>\r\n        </q-card-section>\r\n\r\n        <q-separator />\r\n\r\n        <TreeEntity ref=\"TreeEntity\"\r\n                    :existingDirectories=\"existingDirectories\" />\r\n\r\n        <q-separator />\r\n\r\n        <q-card-actions align=\"right\">\r\n          <q-btn flat\r\n                 label=\"取消\"\r\n                 color=\"primary\"\r\n                 @click=\"ChangeFileDirectoryFlag = false\" />\r\n          <q-btn flat\r\n                 label=\"确定\"\r\n                 color=\"primary\"\r\n                 @click=\"SelectDirectoryLocation\" />\r\n        </q-card-actions>\r\n      </q-card>\r\n    </q-dialog>\r\n    <div class=\"row input_row\"\r\n         v-show=\"selectionArr.length == 1\">\r\n      <q-input v-model=\"CopyTestCaseName\"\r\n               :dense=\"false\"\r\n               class=\"col\">\r\n        <template v-slot:before>\r\n          <span style=\"font-size:14px\">名称:</span>\r\n        </template>\r\n      </q-input>\r\n      <q-select v-model=\"CopyTestCaseSlaveFlag\"\r\n                v-show=\"selectionArr[0].type == 2\"\r\n                :options=\"['是','否']\"\r\n                class=\"col\"\r\n                :dense=\"false\">\r\n        <template v-slot:before>\r\n          <span style=\"font-size:14px\">是否复制从主机:</span>\r\n        </template>\r\n        <template v-slot:prepend>\r\n        </template>\r\n      </q-select>\r\n    </div>\r\n    <div class=\"row input_row\">\r\n      <q-input v-model=\"ChangeFileDirectoryName\"\r\n               :dense=\"false\"\r\n               class=\"col\"\r\n               readonly\r\n               placeholder=\"点击右侧加号选择文件要复制到哪个目录\">\r\n        <template v-slot:before>\r\n          <span style=\"font-size:14px\">文件目录位置:</span>\r\n        </template>\r\n        <template v-slot:append>\r\n          <q-btn round\r\n                 dense\r\n                 flat\r\n                 icon=\"add\"\r\n                 @click=\"ChangeFileDirectory\" />\r\n        </template>\r\n      </q-input>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport * as Apis from \"@/api/index\"\r\nimport TreeEntity from \"@/components/TreeEntity.vue\"                          //目录管理结构树\r\nexport default {\r\n  props: ['selection', 'existingDirectories'],\r\n  components: {\r\n    TreeEntity\r\n  },\r\n  data () {\r\n    return {\r\n      directorName: '',//复制目录的名称\r\n\r\n      ChangeFileDirectoryFlag: false, //树状图弹窗是否显示flag\r\n      ChangeFileDirectoryName: '',    //选择的目录名称\r\n      ChangeFileDirectoryId: null,    //选择的目录id\r\n      ChangeFileDirectoryValue: '',   //选择的目录\r\n\r\n      selectionArr: [],               //初始选择目录或文件的数组\r\n      dataStructure: [],              //目录数据结构数组\r\n      FileList: [],                   //文件数组\r\n      // --------------------------- 单个复制 -----------------------\r\n      CopyTestCaseName: '',           //单个复制名称\r\n      CopyTestCaseSlaveFlag: '否',      //单个复制是否复制从主机\r\n    }\r\n  },\r\n  mounted () {\r\n    console.log(this.$parent)\r\n    this.selectionArr = this.selection;\r\n    if (this.selectionArr.length == 1) {\r\n      this.CopyTestCaseName = this.selectionArr[0].name + '_1';\r\n    }\r\n  },\r\n  methods: {\r\n    //打开目录选择弹窗\r\n    ChangeFileDirectory () {\r\n      this.ChangeFileDirectoryFlag = true;\r\n    },\r\n    //选择目录位置   \r\n    SelectDirectoryLocation () {\r\n      if (!this.$refs.TreeEntity.getDirectoryLocation()) {\r\n        this.$q.notify({\r\n          position: 'top',\r\n          message: '提示',\r\n          caption: '请选择目录位置',\r\n          color: 'red',\r\n        })\r\n        return;\r\n      }\r\n      if (this.$refs.TreeEntity.getDirectoryLocation().id) {\r\n        this.getTreeEntityTreePath(this.$refs.TreeEntity.getDirectoryLocation().id);\r\n      } else {\r\n        this.ChangeFileDirectoryName = this.$refs.TreeEntity.getDirectoryLocation().label;\r\n      }\r\n      this.ChangeFileDirectoryId = this.$refs.TreeEntity.getDirectoryLocation().id;\r\n      this.ChangeFileDirectoryValue = this.$refs.TreeEntity.getDirectoryLocation();\r\n      this.ChangeFileDirectoryFlag = false;\r\n    },\r\n    //获得文件目录路径\r\n    getTreeEntityTreePath (ID) {\r\n      this.$q.loading.show();\r\n      let para = { id: ID };\r\n      Apis.getTreeEntityTreePath(para).then((res) => {\r\n        console.log(res)\r\n        this.ChangeFileDirectoryName = `根目录 > ` + res.data.join(' > ');\r\n        this.$q.loading.hide();\r\n      })\r\n    },\r\n    //复制创建\r\n    copyDirectorCreate () {\r\n      if (!this.ChangeFileDirectoryName) {\r\n        this.$q.notify({\r\n          position: 'top',\r\n          message: '提示',\r\n          caption: '请选择目录位置',\r\n          color: 'red',\r\n        })\r\n        return;\r\n      }\r\n      console.log(this.selectionArr)\r\n      //判断是不是只选择一个进行复制，如果是则可以修改名称\r\n      if (this.selectionArr.length == 1) {\r\n        this.singleCopySelection();\r\n      } else {\r\n        this.recheckingSelection(this.ChangeFileDirectoryValue);\r\n      }\r\n    },\r\n    // ----------------------------- 单个复制 ------------------------------\r\n    //单个复制文件\r\n    singleCopySelection () {\r\n      let type = this.selectionArr[0].type;\r\n      if (type == 1) {\r\n        //执行创建目录的操作\r\n        this.selectionArr[0].name = this.CopyTestCaseName;\r\n        this.recheckingSelection(this.ChangeFileDirectoryValue);\r\n      } else if (type == 2) {\r\n        //执行创建测试用例的操作\r\n        this.CopyTestCaseCreate();\r\n      } else if (type == 3) {\r\n        //执行创建测试数据源的操作\r\n        this.CopyTestDataSourceCreate();\r\n      }\r\n    },\r\n    //复制创建TestCase创建\r\n    CopyTestCaseCreate () {\r\n      this.$q.loading.show();\r\n\r\n      //获得选择的测试用例的详情\r\n      Apis.getTestCaseDetail({ id: this.selectionArr[0].value }).then((results) => {\r\n        console.log(results)\r\n        let para = {\r\n          Name: this.CopyTestCaseName,\r\n          Configuration: results.data.configuration,\r\n          EngineType: results.data.engineType,\r\n          MasterHostID: results.data.masterHostID,\r\n          FolderID: this.ChangeFileDirectoryValue.id,\r\n        }\r\n        //复制创建测试数据源\r\n        Apis.postCreateTestCase(para).then((res) => {\r\n          console.log(res)\r\n          //是否复制从主机\r\n          if (this.CopyTestCaseSlaveFlag == '是') {\r\n            this.getSlaveHostList(res);\r\n          } else {\r\n            this.$q.notify({\r\n              position: 'top',\r\n              message: '提示',\r\n              caption: '复制结束',\r\n              color: 'secondary',\r\n            })\r\n            this.$emit('copyOver');\r\n          }\r\n        })\r\n      })\r\n    },\r\n    //获得从主机数据\r\n    getSlaveHostList (copyId) {\r\n      Apis.getSlaveHostsList({ caseId: this.selectionArr[0].value }).then((res) => {\r\n        if (res.data.length != 0) {\r\n          //复制从主机\r\n          this.CopyCreateSlaveHost(copyId, res.data, 0)\r\n        } else {\r\n          this.$q.notify({\r\n            position: 'top',\r\n            message: '提示',\r\n            caption: '复制结束',\r\n            color: 'secondary',\r\n          })\r\n          this.$emit('copyOver');\r\n        }\r\n      })\r\n    },\r\n    //复制创建从主机\r\n    CopyCreateSlaveHost (res, SlaveHostList, SalveHostNum) {\r\n      if (SalveHostNum == SlaveHostList.length) {\r\n        this.$q.notify({\r\n          position: 'top',\r\n          message: '提示',\r\n          caption: '复制结束',\r\n          color: 'secondary',\r\n        })\r\n        this.$emit('copyOver');\r\n      } else {\r\n        let para = {\r\n          \"HostID\": SlaveHostList[SalveHostNum].hostID,\r\n          \"TestCaseID\": res.data.id,\r\n          \"SlaveName\": SlaveHostList[SalveHostNum].slaveName,\r\n          \"Count\": SlaveHostList[SalveHostNum].count,\r\n          \"ExtensionInfo\": SlaveHostList[SalveHostNum].extensionInfo\r\n        }\r\n        Apis.postCreateSlaveHost(para).then(() => {\r\n          this.CopyCreateSlaveHost(res, SlaveHostList, SalveHostNum + 1)\r\n        })\r\n      }\r\n    },\r\n    //复制创建TestDatasource创建\r\n    CopyTestDataSourceCreate () {\r\n      this.$q.loading.show()\r\n      let para = {\r\n        id: this.selectionArr[0].value\r\n      }\r\n      //获得当前测试数据源详情数据\r\n      Apis.getTestDataSourceDetail(para).then((res) => {\r\n        console.log(res)\r\n        let para = {\r\n          Name: this.CopyTestCaseName,\r\n          Type: res.data.type,\r\n          Data: res.data.data,\r\n          FolderID: this.ChangeFileDirectoryValue.id\r\n        }\r\n        //创建测试数据源\r\n        Apis.postCreateTestDataSource(para).then(() => {\r\n          this.$q.notify({\r\n            position: 'top',\r\n            message: '提示',\r\n            caption: '复制结束',\r\n            color: 'secondary',\r\n          })\r\n          this.$emit('copyOver');\r\n        })\r\n      })\r\n    },\r\n    // ----------------------------- 批量复制 ------------------------------\r\n    //创建数据结构和文件数组\r\n    recheckingSelection (value) {\r\n      //value=新节点 \r\n      this.$q.loading.show();\r\n      for (let i = 0; i < this.selectionArr.length; i++) {\r\n        if (this.selectionArr[i].type == 1) {\r\n          this.dataStructure.push({\r\n            originalNode: this.selectionArr[i],             //原有节点 == 原有目录\r\n            newNode: value                                  //新节点   == 新目录（要创建到哪个目录下）\r\n          })\r\n        } else {\r\n          this.FileList.push(this.selectionArr[i])\r\n        }\r\n      }\r\n      console.log(this.dataStructure, this.FileList)\r\n      this.CreateDataStructureAndFiles(this.dataStructure[0], this.ChangeFileDirectoryValue);\r\n    },\r\n    //复制创建文件目录和文件\r\n    CreateDataStructureAndFiles (value, copyFileValue) {\r\n      //value(执行的目录)        copyFileValue(当前要创建文件的新目录)\r\n      console.log('------------开始执行复制操作---------------')\r\n      let _this = this;\r\n      let copyFileNum = 0;//递归执行创建文件的数\r\n      //判断文件数组是否有，有则先执行创建文件，没有则直接执行创建目录操作\r\n      if (this.FileList.length != 0) {\r\n        copyFile();\r\n      } else {\r\n        copyFolder()\r\n      }\r\n\r\n\r\n      //创建文件\r\n      function copyFile () {\r\n        //递归执行创建文件的操作\r\n        if (copyFileNum != _this.FileList.length) {\r\n          console.log(_this.FileList, copyFileNum)\r\n          let para = {\r\n            ID: _this.FileList[copyFileNum].value,\r\n            ParentID: copyFileValue.id,\r\n            Type: _this.FileList[copyFileNum].type == 2 ? 'TestCase' : 'TestDataSource'\r\n          }\r\n          Apis.postTreeEntityCopyFile(para).then(res => {\r\n            console.log(res)\r\n            //如果当前目录已存在相同文件则提示\r\n            if (!res.data) {\r\n              _this.$q.notify({\r\n                position: 'top',\r\n                message: '提示',\r\n                caption: `已存在${_this.FileList[copyFileNum].name}`,\r\n                color: 'red',\r\n              })\r\n            }\r\n            copyFileNum++;\r\n            copyFile();\r\n          })\r\n        } else {\r\n          //递归完成创建文件的操作\r\n          _this.FileList = [];\r\n          //如果value没有则已经是最后的操作，复制结束\r\n          if (value) {\r\n            //执行创建目录\r\n            copyFolder();\r\n          } else {\r\n            _this.$q.notify({\r\n              position: 'top',\r\n              message: '提示',\r\n              caption: '复制结束',\r\n              color: 'secondary',\r\n            })\r\n            console.log('------------复制操作结束---------------')\r\n            _this.$emit('copyOver');\r\n          }\r\n        }\r\n      }\r\n\r\n\r\n\r\n      //创建目录\r\n      function copyFolder () {\r\n        let para = {\r\n          Name: value.originalNode.name,\r\n          FolderID: value.newNode.id\r\n        }\r\n        Apis.postTreeEntityCopyFolder(para).then(res => {\r\n          console.log(res)\r\n          getTreeChildren(value.originalNode, res.data)\r\n        })\r\n      }\r\n\r\n\r\n\r\n      //获取原有节点下的子节点，如果是目录，创建新的数据结构记录\r\n      function getTreeChildren (oldValue, newValue) {\r\n        let para = {\r\n          parentId: oldValue.id,\r\n          matchName: '',\r\n          page: 1,\r\n          type: null,\r\n          pageSize: 99999\r\n        }\r\n        Apis.getTreeEntityChildrenList(para).then(res => {\r\n          console.log(res)\r\n          if (res.data.results.length != 0) {\r\n            let childrenArr = res.data.results;\r\n            //创建新的数据结构\r\n            for (let i = 0; i < childrenArr.length; i++) {\r\n              if (childrenArr[i].type == 1) {\r\n                _this.dataStructure.push({\r\n                  originalNode: childrenArr[i],\r\n                  newNode: newValue\r\n                })\r\n              } else {\r\n                _this.FileList.push(childrenArr[i])\r\n              }\r\n            }\r\n          }\r\n          //在数据结构当中删除已经执行完成的目录\r\n          _this.dataStructure.splice(0, 1, '');\r\n          _this.dataStructure = _this.dataStructure.filter(item => item);\r\n          console.log(_this.dataStructure, _this.FileList)\r\n          //判断数据结构是否还有需要执行的目录\r\n          if (_this.dataStructure.length != 0) {\r\n            //数据结构里还有则继续执行递归操作\r\n            _this.CreateDataStructureAndFiles(_this.dataStructure[0], newValue);\r\n          } else {\r\n            //数据结构里没有了，判断文件数组是否还有\r\n            if (_this.FileList.length != 0) {\r\n              //文件数组有则继续执行\r\n              _this.CreateDataStructureAndFiles(_this.dataStructure[0], newValue);\r\n            } else {\r\n              //文件数组没有则复制结束\r\n              _this.$q.notify({\r\n                position: 'top',\r\n                message: '提示',\r\n                caption: '复制结束',\r\n                color: 'secondary',\r\n              })\r\n              console.log('------------复制操作结束---------------')\r\n              _this.$emit('copyOver');\r\n              //_this.$q.loading.hide();\r\n            }\r\n          }\r\n\r\n        })\r\n      }\r\n\r\n    },\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n</style>\r\n<style lang=\"scss\">\r\n.new_input {\r\n  width: 100%;\r\n  padding: 10px 30px;\r\n  .input_row {\r\n    margin-bottom: 30px;\r\n  }\r\n}\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CopyDirectory.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CopyDirectory.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CopyDirectory.vue?vue&type=template&id=0db8797e&scoped=true&\"\nimport script from \"./CopyDirectory.vue?vue&type=script&lang=js&\"\nexport * from \"./CopyDirectory.vue?vue&type=script&lang=js&\"\nimport style1 from \"./CopyDirectory.vue?vue&type=style&index=1&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0db8797e\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <div id=\"Directory\"\r\n       class=\"column item-start\">\r\n    <!-- button -->\r\n    <div class=\"col-auto  detail_header row\">\r\n      <div class=\"col-7 col-md-7 row\">\r\n        <q-btn class=\"btn\"\r\n               color=\"primary\"\r\n               label=\"上一级\"\r\n               v-show=\"RecordDirectorySite.length!=0\"\r\n               @click=\"toPrevLevel\" />\r\n        <q-btn class=\"btn\"\r\n               color=\"primary\"\r\n               label=\"返回根目录\"\r\n               v-show=\"RecordDirectorySite.length!=0\"\r\n               @click=\"returnToRoot\" />\r\n        <q-btn class=\"btn\"\r\n               color=\"primary\"\r\n               label=\"新建目录\"\r\n               v-show=\"(isSearchStatus && RecordDirectorySite.length!=0) || !isSearchStatus\"\r\n               @click=\"newFolderCreate\" />\r\n        <q-btn class=\"btn\"\r\n               color=\"primary\"\r\n               label=\"移动目录\"\r\n               @click=\"ChangeFileDirectory\" />\r\n        <q-btn class=\"btn\"\r\n               color=\"primary\"\r\n               label=\"目录重命名\"\r\n               @click=\"ModifyFolderName\" />\r\n        <q-btn class=\"btn\"\r\n               color=\"primary\"\r\n               label=\"复制\"\r\n               @click=\"openCopyDirector\" />\r\n        <q-btn class=\"btn\"\r\n               color=\"red\"\r\n               label=\"删除\"\r\n               @click=\"DeleteFolder\" />\r\n        <q-btn class=\"btn\"\r\n               color=\"primary\"\r\n               label=\"新建测试用例\"\r\n               v-show=\"(isSearchStatus && RecordDirectorySite.length!=0) || !isSearchStatus\"\r\n               @click=\"createTestCaseFixed = true;\" />\r\n        <q-btn class=\"btn\"\r\n               color=\"primary\"\r\n               label=\"新建测试数据源\"\r\n               v-show=\"(isSearchStatus && RecordDirectorySite.length!=0) || !isSearchStatus\"\r\n               @click=\"createDataSourceFixed = true;\" />\r\n      </div>\r\n      <div class=\"col-5 col-md-5  row\">\r\n\r\n        <div class=\"col-8 row\">\r\n          <q-input class=\"col-6\"\r\n                   style=\"height:40px;\"\r\n                   v-model=\"searchText\"\r\n                   outlined\r\n                   placeholder=\"请输入文件名称\"\r\n                   type=\"search\"\r\n                   :dense='true'>\r\n            <template v-slot:append>\r\n              <q-icon name=\"search\" />\r\n            </template>\r\n          </q-input>\r\n\r\n          <q-select class=\"col-5\"\r\n                    v-model=\"FileType\"\r\n                    style=\"margin-left:10px;height:40px;\"\r\n                    :options=\"['目录','测试用例','测试数据源']\"\r\n                    label=\"类型\"\r\n                    outlined\r\n                    :dense='true' />\r\n        </div>\r\n\r\n        <div class=\"col-4 row\">\r\n          <q-btn class=\"btn col-4\"\r\n                 color=\"primary\"\r\n                 label=\"搜索\"\r\n                 @click=\"searchFile(1,true)\" />\r\n\r\n          <q-btn class=\"btn col-6\"\r\n                 color=\"primary\"\r\n                 label=\"取消搜索\"\r\n                 @click=\"cancelSearch\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-auto  pathLocation q-pa-md\">\r\n      {{currentDirectoryLocation}}\r\n    </div>\r\n    <!-- 目录 -->\r\n    <div class=\"col-9 col-md-8  folder\">\r\n      <div class=\"q-pa-md\">\r\n        <div class=\"Rootfolder\">\r\n          <div class=\"Rootfolder_list\"\r\n               v-for=\"(value ,index) in FolderList\"\r\n               :key=\"index\"\r\n               @dblclick=\"toNextLevel(value,true,1)\"\r\n               tag=\"label\">\r\n\r\n            <q-checkbox v-model=\"selection\"\r\n                        :val=\"value\"\r\n                        :dense=\"true\"\r\n                        label=\"\"\r\n                        class=\"checkbox\" />\r\n            <span class=\"svg-container\"\r\n                  v-if=\"value.type==1\">\r\n              <svg class=\"icon iconfolder\"\r\n                   aria-hidden=\"true\">\r\n                <use xlink:href=\"#icon-wenjianjia2\"></use>\r\n              </svg>\r\n            </span>\r\n            <span class=\"svg-container\"\r\n                  v-if=\"value.type==2\">\r\n              <svg class=\"icon iconfolder\"\r\n                   aria-hidden=\"true\">\r\n                <use xlink:href=\"#icon--wenjian\"></use>\r\n              </svg>\r\n            </span>\r\n            <span class=\"svg-container\"\r\n                  v-if=\"value.type==3\">\r\n              <svg class=\"icon iconfolder\"\r\n                   aria-hidden=\"true\">\r\n                <use xlink:href=\"#icon-shujuyuan\"></use>\r\n              </svg>\r\n            </span>\r\n\r\n            <p>{{value.name}}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"folderList_page\">\r\n      <el-pagination background\r\n                     style=\"float:right;margin-top:10px;margin-right:5%;\"\r\n                     layout=\"prev, pager, next\"\r\n                     :current-page=\"folderPage.folderPageCurrent\"\r\n                     :page-size=\"100\"\r\n                     @current-change=\"switchFolderPage\"\r\n                     :total=\"folderPage.folderPageTotal\">\r\n      </el-pagination>\r\n    </div>\r\n\r\n    <!-- 更改文件目录 -->\r\n    <q-dialog v-model=\"ChangeFileDirectoryFlag\"\r\n              persistent>\r\n      <q-card style=\"width: 100%;\">\r\n        <q-card-section>\r\n          <div class=\"text-h6\">选择文件目录</div>\r\n        </q-card-section>\r\n\r\n        <q-separator />\r\n\r\n        <TreeEntity ref=\"TreeEntity\"\r\n                    :existingDirectories='existingDirectories' />\r\n\r\n        <q-separator />\r\n\r\n        <q-card-actions align=\"right\">\r\n          <q-btn flat\r\n                 label=\"取消\"\r\n                 color=\"primary\"\r\n                 @click=\"ChangeFileDirectoryFlag = false;\" />\r\n          <q-btn flat\r\n                 label=\"确定\"\r\n                 color=\"primary\"\r\n                 @click=\"SelectDirectoryLocation\" />\r\n        </q-card-actions>\r\n      </q-card>\r\n    </q-dialog>\r\n\r\n    <!-- 新增TestCase框 -->\r\n    <q-dialog v-model=\"createTestCaseFixed\"\r\n              persistent>\r\n      <q-card style=\"width: 100%; max-width: 70vw;\">\r\n        <q-card-section>\r\n          <div class=\"text-h6\">创建测试用例</div>\r\n        </q-card-section>\r\n\r\n        <q-separator />\r\n\r\n        <CreateShowTestCase ref=\"CSTestCase\"\r\n                            :currentDirectory=\"RecordDirectorySite[RecordDirectorySite.length-1]\" />\r\n\r\n        <q-separator />\r\n\r\n        <q-card-actions align=\"right\">\r\n          <q-btn flat\r\n                 label=\"取消\"\r\n                 color=\"primary\"\r\n                 @click=\"newCancel\" />\r\n          <q-btn flat\r\n                 label=\"创建\"\r\n                 color=\"primary\"\r\n                 @click=\"newCreate\" />\r\n        </q-card-actions>\r\n      </q-card>\r\n    </q-dialog>\r\n\r\n    <!-- 新增TestDataSource框 -->\r\n    <q-dialog v-model=\"createDataSourceFixed\"\r\n              persistent>\r\n      <q-card style=\"width:100%; max-width: 70vw;\">\r\n        <q-card-section>\r\n          <div class=\"text-h6\">创建测试数据源</div>\r\n        </q-card-section>\r\n\r\n        <q-separator />\r\n        <CreatePut ref=\"createDataSource\"\r\n                   :currentDirectory=\"RecordDirectorySite[RecordDirectorySite.length-1]\" />\r\n        <q-separator />\r\n\r\n        <q-card-actions align=\"right\">\r\n          <q-btn flat\r\n                 label=\"取消\"\r\n                 color=\"primary\"\r\n                 @click=\"newDataSourceCancel\" />\r\n          <q-btn flat\r\n                 label=\"创建\"\r\n                 color=\"primary\"\r\n                 @click=\"newDataSourceCreate\" />\r\n        </q-card-actions>\r\n      </q-card>\r\n    </q-dialog>\r\n\r\n    <!-- 查看更新TestDataSource框 -->\r\n    <q-dialog v-model=\"LookDataSourceFixed\"\r\n              persistent>\r\n      <q-card style=\"width:100%; max-width: 70vw;\">\r\n        <q-card-section>\r\n          <div class=\"text-h6\">更新测试数据源</div>\r\n        </q-card-section>\r\n\r\n        <q-separator />\r\n        <CreatePut ref=\"putDataSource\"\r\n                   :detailData=\"dataSourceDetail\" />\r\n\r\n        <q-separator />\r\n\r\n        <q-card-actions align=\"right\">\r\n          <q-btn flat\r\n                 label=\"取消\"\r\n                 color=\"primary\"\r\n                 @click=\"cancelPutDataSource\" />\r\n          <q-btn flat\r\n                 label=\"更新\"\r\n                 color=\"primary\"\r\n                 @click=\"putTestDataSource\" />\r\n        </q-card-actions>\r\n      </q-card>\r\n    </q-dialog>\r\n\r\n    <!-- 复制 -->\r\n\r\n    <q-dialog v-model=\"copyDirectorFlag\"\r\n              persistent>\r\n      <q-card style=\"width: 100%; max-width: 70vw;\">\r\n        <q-card-section>\r\n          <div class=\"text-h6\">复制目录/文件</div>\r\n        </q-card-section>\r\n\r\n        <q-separator />\r\n        <CopyDirector ref=\"copyDirector\"\r\n                      :selection=\"selection\"\r\n                      :existingDirectories='existingDirectories'\r\n                      @copyOver='copyOver' />\r\n        <q-separator />\r\n\r\n        <q-card-actions align=\"right\">\r\n          <q-btn flat\r\n                 label=\"取消\"\r\n                 color=\"primary\"\r\n                 @click=\"copyDirectorFlag = false\" />\r\n          <q-btn flat\r\n                 label=\"复制\"\r\n                 color=\"primary\"\r\n                 @click=\"copyDirectorCreate\" />\r\n        </q-card-actions>\r\n      </q-card>\r\n    </q-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as Apis from \"@/api/index\"\r\nimport CreateShowTestCase from '../TestCase/component/CreateShowTestCase.vue' //创建测试用例\r\nimport TreeEntity from \"@/components/TreeEntity.vue\"                          //目录管理结构树\r\nimport CreatePut from \"../TestDataSource/CreatePut.vue\"                       //创建更新测试数据源\r\nimport CopyDirector from \"./CopyDirectory.vue\"                                //复制文件或目录\r\nexport default {\r\n  name: 'Directory',\r\n  components: {\r\n    CreateShowTestCase,\r\n    TreeEntity,\r\n    CreatePut,\r\n    CopyDirector\r\n  },\r\n  data () {\r\n    return {\r\n      FolderList: [],                 //目录列表\r\n      selection: [],                  //选择的文件目录\r\n      RecordDirectorySite: [],        //记录目录位置\r\n      folderPage: {\r\n        folderPageCurrent: null,      //文件目录页码\r\n        folderPageTotal: null,        //总数量\r\n      },\r\n      isSearchStatus: false,          //是否是搜索状态\r\n      currentDirectoryLocation: '',    //当前所在目录位置\r\n      // -------- 搜索 -------\r\n      searchText: '',//搜索内容\r\n      FileType: null,//文件类型\r\n      // -------- 更改文件目录 -------\r\n      ChangeFileDirectoryFlag: false, //更改文件目录Flag\r\n      ChangeFileDirectoryValue: '',   //选择文件目录值\r\n      // -------- 新建测试用例 -------\r\n      createTestCaseFixed: false,\r\n      // -------- 新建更新测试数据源弹窗 -------\r\n      dataSourceDetail: '',           //测试数据源详情数据\r\n      createDataSourceFixed: false,   //新建测试数据源弹窗\r\n      LookDataSourceFixed: false,     //更新测试数据源弹窗\r\n      // -------- 复制 -------\r\n      copyDirectorFlag: false,         //复制目录或Flag\r\n\r\n      existingDirectories: []//复制或移动目录的时候禁止出现已选择的目录\r\n\r\n    }\r\n  },\r\n  created () {\r\n    this.getEchoLocation();\r\n  },\r\n  methods: {\r\n    //回到之前的位置\r\n    getEchoLocation (currentChange) {\r\n      //currentChange 切换的页码\r\n      let _this = this;\r\n      this.selection = [];//清除选择的文件\r\n      let Page = JSON.parse(sessionStorage.getItem('Page'));\r\n      this.folderPage.folderPageCurrent = currentChange;\r\n      this.isSearchStatus = JSON.parse(sessionStorage.getItem('isSearchStatus')) || false;\r\n      //判断当前目录是否搜索状态\r\n      if (this.isSearchStatus) {\r\n        console.log(this.isSearchStatus)\r\n        this.RecordDirectorySite = JSON.parse(sessionStorage.getItem('RecordSearchDirectorySite'));\r\n        //判断是否是从测试用例页面跳转过来\r\n        if (Page) {\r\n          this.searchText = Page.searchText;\r\n          this.FileType = Page.FileType;\r\n          //判断当前搜索列表是不是根目录\r\n          if (this.RecordDirectorySite.length == 0) {\r\n            this.searchFile(Page.folderPageCurrent, false);\r\n          } else {\r\n            //执行获取子级目录接口\r\n            this.toNextLevel(this.RecordDirectorySite[this.RecordDirectorySite.length - 1], false, Page.folderPageCurrent)\r\n          }\r\n          if (Page.type == 2) {\r\n            sessionStorage.removeItem('Page')\r\n          }\r\n        } else {\r\n          if (this.RecordDirectorySite.length == 0) {\r\n            this.searchFile(currentChange, false);\r\n          } else {\r\n            //执行获取子级目录接口\r\n            this.toNextLevel(this.RecordDirectorySite[this.RecordDirectorySite.length - 1], false, currentChange)\r\n          }\r\n        }\r\n      } else {\r\n        isParentChildren();\r\n      }\r\n\r\n      //判断当前目录位置执行哪个状态\r\n      function isParentChildren () {\r\n        _this.RecordDirectorySite = JSON.parse(sessionStorage.getItem('RecordDirectorySite'));\r\n        console.log(_this.folderPage, Page)\r\n        //如果是根目录回来的则复制空数组；\r\n        if (_this.RecordDirectorySite == null) { _this.RecordDirectorySite = []; }\r\n        let page = Page ? Page.folderPageCurrent : currentChange;  //回显当前的页码\r\n        if (_this.RecordDirectorySite.length != 0) {\r\n          //执行获取子级目录接口\r\n          _this.toNextLevel(_this.RecordDirectorySite[_this.RecordDirectorySite.length - 1], false, page)\r\n        } else {\r\n          //执行获取根目录接口\r\n          _this.getTreeEntityList(page);\r\n        }\r\n        sessionStorage.removeItem('Page')\r\n      }\r\n\r\n\r\n    },\r\n    //获得根目录\r\n    getTreeEntityList (Page) {\r\n      this.$q.loading.show();\r\n      let para = {\r\n        parentId: null,\r\n        matchName: '',\r\n        page: Page ? Page : 1,\r\n        type: null,\r\n        pageSize: 100\r\n      }\r\n      Apis.getTreeEntityChildrenList(para).then(res => {\r\n        console.log(res)\r\n        this.folderPage.folderPageCurrent = Page ? Page : 1;\r\n        this.folderPage.folderPageTotal = res.data.totalCount;\r\n\r\n        this.FolderList = res.data.results;\r\n        this.getTreeEntityTreePath();\r\n      })\r\n    },\r\n    //上一级\r\n    toPrevLevel () {\r\n      //回显搜索状态值\r\n      if (this.isSearchStatus) {\r\n        let Page = JSON.parse(sessionStorage.getItem('Page'));\r\n        if (Page) {\r\n          this.searchText = Page.searchText;\r\n          this.FileType = Page.FileType;\r\n        }\r\n      } else {\r\n        this.searchText = '';\r\n        this.FileType = null;\r\n      }\r\n\r\n      if (this.isSearchStatus && this.RecordDirectorySite.length == 1) {\r\n        this.searchFile(this.RecordDirectorySite[0].pageCurrent, true);\r\n        return;\r\n      }\r\n      let para = {\r\n        //获取记录目录位置的上一个的id\r\n        parentId: this.RecordDirectorySite[this.RecordDirectorySite.length - 1].id,\r\n        page: this.RecordDirectorySite[this.RecordDirectorySite.length - 1].pageCurrent,\r\n        pageSize: 100\r\n      }\r\n      this.$q.loading.show();\r\n      Apis.getgobackpreviousTreeEntity(para).then(res => {\r\n        console.log(res)\r\n\r\n\r\n\r\n        //删除当前记录目录位置的最后一个并且重新保存到session\r\n        this.RecordDirectorySite.pop();\r\n        //判断当前是否搜索状态\r\n        if (this.isSearchStatus) {\r\n          sessionStorage.setItem('RecordSearchDirectorySite', JSON.stringify(this.RecordDirectorySite));\r\n        } else {\r\n          sessionStorage.setItem('RecordDirectorySite', JSON.stringify(this.RecordDirectorySite));\r\n        }\r\n\r\n\r\n        this.selection = [];\r\n        this.folderPage.folderPageCurrent = res.data.currentPage;\r\n        this.folderPage.folderPageTotal = res.data.totalCount;\r\n        this.FolderList = res.data.results;\r\n\r\n\r\n        this.getTreeEntityTreePath();\r\n\r\n      })\r\n    },\r\n    //下一级\r\n    toNextLevel (value, TypeFlag, page) {\r\n      //回显搜索状态值\r\n      if (this.isSearchStatus) {\r\n        let Page = JSON.parse(sessionStorage.getItem('Page'));\r\n        if (Page) {\r\n          this.searchText = Page.searchText;\r\n          this.FileType = Page.FileType;\r\n        }\r\n      } else {\r\n        this.searchText = '';\r\n        this.FileType = null;\r\n      }\r\n      console.log(value)\r\n      if (value.type === 1) {\r\n        //----------------- 当前进入的是目录 ----------------- \r\n        let para = {\r\n          parentId: value.id,\r\n          matchName: '',\r\n          page: page || 1,\r\n          type: null,\r\n          pageSize: 100\r\n        }\r\n        this.$q.loading.show();\r\n        Apis.getTreeEntityChildrenList(para).then(res => {\r\n          console.log(res)\r\n\r\n\r\n          //是否保存当前目录位置\r\n          if (TypeFlag) {\r\n            value.pageCurrent = this.folderPage.folderPageCurrent;\r\n            this.RecordDirectorySite.push(value);\r\n            //判断当前是否搜索状态\r\n            if (this.isSearchStatus) {\r\n              sessionStorage.setItem('RecordSearchDirectorySite', JSON.stringify(this.RecordDirectorySite));\r\n            } else {\r\n              sessionStorage.setItem('RecordDirectorySite', JSON.stringify(this.RecordDirectorySite));\r\n            }\r\n            console.log(this.RecordDirectorySite)\r\n          }\r\n\r\n          this.folderPage.folderPageCurrent = res.data.currentPage;\r\n          this.folderPage.folderPageTotal = res.data.totalCount;\r\n\r\n          this.selection = [];\r\n          this.FolderList = res.data.results;\r\n\r\n          this.getTreeEntityTreePath();\r\n        })\r\n      } else if (value.type === 2) {\r\n        //----------------- 当前进入的是测试用例 ----------------- \r\n        //存储搜索条件\r\n        sessionStorage.setItem('Page', JSON.stringify({\r\n          searchText: this.isSearchStatus ? this.searchText.trim() : '',//搜索内容\r\n          FileType: this.isSearchStatus ? this.FileType : null,//文件类型\r\n          folderPageCurrent: this.folderPage.folderPageCurrent,\r\n          folderPageTotal: this.folderPage.folderPageTotal,\r\n          type: 2\r\n        }))\r\n        this.$router.push({\r\n          name: 'DirectoryTestCaseDetail',\r\n          query: {\r\n            id: value.value\r\n          },\r\n        })\r\n      } else if (value.type === 3) {\r\n        //----------------- 当前进入的是测试数据源 ----------------- \r\n        console.log(value)\r\n        this.getTestDataSourceDetail(value.value)\r\n      }\r\n    },\r\n    //删除文件\r\n    DeleteFolder () {\r\n      if (this.selection.length == 0) {\r\n        this.$q.notify({\r\n          position: 'top',\r\n          message: '提示',\r\n          caption: '请选择文件（目录、测试用例、测试数据源）',\r\n          color: 'red',\r\n        })\r\n      } else {\r\n        this.$q.dialog({\r\n          title: '提示',\r\n          message: `您确定要删除当前选择的文件吗`,\r\n          persistent: true,\r\n          ok: {\r\n            push: true,\r\n            label: '确定'\r\n          },\r\n          cancel: {\r\n            push: true,\r\n            label: '取消'\r\n          },\r\n        }).onOk(() => {\r\n          let _this = this;\r\n          let delNum = 0;\r\n          delFolder();\r\n          //递归执行删除文件的操作\r\n          function delFolder () {\r\n            _this.$q.loading.show();\r\n            let para = `?id=${_this.selection[delNum].id}`\r\n            Apis.deleteTreeEntity(para).then(res => {\r\n              console.log(res)\r\n              if (delNum != _this.selection.length - 1) {\r\n                delNum++;\r\n                delFolder()\r\n              } else {\r\n                _this.getEchoLocation();\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n\r\n    },\r\n    //切换目录页码\r\n    switchFolderPage (value) {\r\n      console.log(value)\r\n      this.getEchoLocation(value)\r\n    },\r\n    //获得文件目录路径\r\n    getTreeEntityTreePath () {\r\n      console.log(this.RecordDirectorySite)\r\n      this.$q.loading.show();\r\n      if (this.isSearchStatus) {\r\n        if (this.RecordDirectorySite.length > 0) {\r\n          let para = { id: this.RecordDirectorySite[this.RecordDirectorySite.length - 1].id };\r\n          Apis.getTreeEntityTreePath(para).then((res) => {\r\n            console.log(res)\r\n            this.currentDirectoryLocation = `当前所在目录位置：根目录 > ` + res.data.join(' > ');\r\n            this.$q.loading.hide();\r\n          })\r\n        } else {\r\n          this.currentDirectoryLocation = `当前所在目录位置：根目录 > `;\r\n          this.$q.loading.hide();\r\n        }\r\n      } else {\r\n        if (this.RecordDirectorySite.length != 0) {\r\n          let para = { id: this.RecordDirectorySite[this.RecordDirectorySite.length - 1].id };\r\n          Apis.getTreeEntityTreePath(para).then((res) => {\r\n            console.log(res)\r\n            this.currentDirectoryLocation = '当前所在目录位置：根目录 > ' + res.data.join(' > ');\r\n            this.$q.loading.hide();\r\n          })\r\n        } else {\r\n          this.currentDirectoryLocation = '当前所在目录位置：根目录 > ';\r\n          this.$q.loading.hide();\r\n        }\r\n      }\r\n\r\n    },\r\n    //---------------------------------------------- 搜索 -------------------------------------------\r\n    //搜索\r\n    searchFile (Page, saveDirectory) {\r\n      console.log(Page)\r\n      console.log(this.searchText)\r\n      if (!this.searchText.trim() && !this.FileType) {\r\n        this.$q.notify({\r\n          position: 'top',\r\n          message: '提示',\r\n          caption: '请填写搜索内容或选择类型进行搜索',\r\n          color: 'red',\r\n        })\r\n        return;\r\n      }\r\n      console.log(this.FileType)\r\n      let FileType = null;\r\n      switch (this.FileType) {\r\n        case '目录':\r\n          FileType = 1;\r\n          break;\r\n        case '测试用例':\r\n          FileType = 2;\r\n          break;\r\n        case '测试数据源':\r\n          FileType = 3;\r\n          break;\r\n      }\r\n      let para = {\r\n        matchName: this.searchText,\r\n        page: Page || 1,\r\n        type: FileType,\r\n        pageSize: 100\r\n      }\r\n      console.log(para)\r\n      this.$q.loading.show();\r\n      Apis.getTreeEntityList(para).then(res => {\r\n        console.log(res)\r\n        this.folderPage.folderPageCurrent = res.data.currentPage;\r\n        this.folderPage.folderPageTotal = res.data.totalCount;\r\n\r\n        this.isSearchStatus = true;\r\n\r\n        sessionStorage.setItem('Page', JSON.stringify({\r\n          searchText: this.searchText.trim(),//搜索内容\r\n          FileType: this.FileType,//文件类型\r\n          folderPageCurrent: this.folderPage.folderPageCurrent,\r\n          folderPageTotal: this.folderPage.folderPageTotal,\r\n          type: 1\r\n        }))\r\n        if (saveDirectory) {\r\n          sessionStorage.setItem('RecordSearchDirectorySite', JSON.stringify([]));    //保存搜索目录位置\r\n          sessionStorage.setItem('isSearchStatus', true);\r\n          this.RecordDirectorySite = JSON.parse(sessionStorage.getItem('RecordSearchDirectorySite'));\r\n        }\r\n        console.log(this.RecordDirectorySite)\r\n\r\n        this.FolderList = res.data.results;\r\n        this.getTreeEntityTreePath();\r\n      })\r\n    },\r\n    //取消搜索\r\n    cancelSearch () {\r\n      if (this.isSearchStatus) {\r\n        sessionStorage.removeItem('Page');\r\n        sessionStorage.setItem('RecordSearchDirectorySite', JSON.stringify([]));\r\n        sessionStorage.setItem('isSearchStatus', false)\r\n        this.isSearchStatus = false;\r\n        this.searchText = ''; this.FileType = null;\r\n        this.getEchoLocation();\r\n      }\r\n    },\r\n    //---------------------------------------------- 目录操作 -------------------------------------------\r\n    //返回根目录\r\n    returnToRoot () {\r\n      //判断当前是否搜索状态\r\n      if (this.isSearchStatus) {\r\n        this.RecordDirectorySite = [];\r\n        sessionStorage.removeItem('Page');\r\n        sessionStorage.setItem('RecordSearchDirectorySite', JSON.stringify([]));\r\n        sessionStorage.setItem('isSearchStatus', false)\r\n        this.isSearchStatus = false;\r\n        this.searchText = ''; this.FileType = null;\r\n        this.getTreeEntityList();\r\n      } else {\r\n        this.RecordDirectorySite = [];\r\n        this.getTreeEntityList();\r\n        sessionStorage.setItem('RecordDirectorySite', JSON.stringify(this.RecordDirectorySite));\r\n      }\r\n    },\r\n    //新建目录\r\n    newFolderCreate () {\r\n      this.$q.dialog({\r\n        title: '新建目录',\r\n        message: '目录名称（目录名称不能为空）',\r\n        prompt: {\r\n          model: '',\r\n          type: 'text' // optional\r\n        },\r\n        persistent: true,\r\n        ok: {\r\n          push: true,\r\n          label: '确定'\r\n        },\r\n        cancel: {\r\n          push: true,\r\n          label: '取消'\r\n        },\r\n      }).onOk(data => {\r\n        if (!data.trim()) {\r\n          this.$q.notify({\r\n            position: 'top',\r\n            message: '提示',\r\n            caption: '目录名称不能为空',\r\n            color: 'red',\r\n          })\r\n          return;\r\n        }\r\n        this.$q.loading.show();\r\n        let para = {\r\n          Name: data,\r\n          //通过保存的目录位置来判断是否是根目录\r\n          FolderID: this.RecordDirectorySite.length ? this.RecordDirectorySite[this.RecordDirectorySite.length - 1].id : null,\r\n        }\r\n        Apis.postCreateTreeEntity(para).then(res => {\r\n          console.log(res)\r\n          this.getEchoLocation();\r\n        })\r\n      })\r\n    },\r\n    //目录重命名\r\n    ModifyFolderName () {\r\n      console.log(this.selection)\r\n      if (this.selection.length == 0) {\r\n        this.$q.notify({\r\n          position: 'top',\r\n          message: '提示',\r\n          caption: '请选择目录进行修改',\r\n          color: 'red',\r\n        })\r\n      } else if (this.selection.length > 1) {\r\n        this.$q.notify({\r\n          position: 'top',\r\n          message: '提示',\r\n          caption: '只能选择一个目录进行修改',\r\n          color: 'red',\r\n        })\r\n      } else {\r\n        if (this.selection[0].type != 1) {\r\n          this.$q.notify({\r\n            position: 'top',\r\n            message: '提示',\r\n            caption: '只能选择目录进行修改',\r\n            color: 'red',\r\n          })\r\n          return;\r\n        }\r\n        this.$q.dialog({\r\n          title: '目录重命名',\r\n          message: '目录名称',\r\n          prompt: {\r\n            model: this.selection[0].name,\r\n            type: 'text' // optional\r\n          },\r\n          persistent: true,\r\n          ok: {\r\n            push: true,\r\n            label: '确定'\r\n          },\r\n          cancel: {\r\n            push: true,\r\n            label: '取消'\r\n          },\r\n        }).onOk(data => {\r\n          console.log(data)\r\n          if (!data.trim()) {\r\n            this.$q.notify({\r\n              position: 'top',\r\n              message: '提示',\r\n              caption: '目录名称不能为空',\r\n              color: 'red',\r\n            })\r\n            return;\r\n          }\r\n          let para = `?id=${this.selection[0].id}&name=${data}`\r\n          this.$q.loading.show();\r\n          Apis.putTreeEntityName(para).then(res => {\r\n            console.log(res)\r\n            this.$q.notify({\r\n              position: 'top',\r\n              message: '提示',\r\n              caption: '修改成功',\r\n              color: 'secondary',\r\n            })\r\n            this.getEchoLocation();\r\n          })\r\n        })\r\n      }\r\n    },\r\n    //移动目录\r\n    ChangeFileDirectory () {\r\n      if (this.selection.length == 0) {\r\n        this.$q.notify({\r\n          position: 'top',\r\n          message: '提示',\r\n          caption: '请选择文件（目录、测试用例、测试数据源）',\r\n          color: 'red',\r\n        })\r\n      } else {\r\n        //存储目录防止移动时出现相同目录\r\n        this.existingDirectories = [];\r\n        for (let i = 0; i < this.selection.length; i++) {\r\n          if (this.selection[i].type == 1) { this.existingDirectories.push(this.selection[i]) }\r\n        }\r\n        this.ChangeFileDirectoryFlag = true;\r\n      }\r\n    },\r\n    //确定选择目录位置\r\n    SelectDirectoryLocation () {\r\n      let _this = this;\r\n      let putNum = 0;\r\n      this.ChangeFileDirectoryValue = this.$refs.TreeEntity.getDirectoryLocation();\r\n      //判断是否选择要移动的目录\r\n      if (!this.ChangeFileDirectoryValue) {\r\n        this.$q.notify({\r\n          position: 'top',\r\n          message: '提示',\r\n          caption: '请选择要移动到的目录位置',\r\n          color: 'red',\r\n        })\r\n        return;\r\n      } else {\r\n        this.$q.loading.show();\r\n        UpdateFolder();\r\n      }\r\n      console.log(this.ChangeFileDirectoryValue)\r\n      //递归执行移动目录操作\r\n      function UpdateFolder () {\r\n        let para = '';\r\n        if (_this.ChangeFileDirectoryValue.id) {\r\n          para = `?id=${_this.selection[putNum].id}&parentId=${_this.ChangeFileDirectoryValue.id}`\r\n        } else {\r\n          para = `?id=${_this.selection[putNum].id}`\r\n        }\r\n        Apis.putTreeEntityParent(para).then(res => {\r\n          console.log(res)\r\n          if (putNum != _this.selection.length - 1) {\r\n            putNum++;\r\n            UpdateFolder()\r\n          } else {\r\n            _this.ChangeFileDirectoryFlag = false;\r\n            _this.getEchoLocation();\r\n          }\r\n        })\r\n      }\r\n    },\r\n    //---------------------------------------------- 新建取消创建测试用例 -------------------------------------------\r\n    //新增弹窗取消按钮\r\n    newCancel () {\r\n      this.$refs.CSTestCase.newCancel();\r\n      this.createTestCaseFixed = false;\r\n    },\r\n    //新增弹窗创建按钮\r\n    newCreate () {\r\n      if (!this.$refs.CSTestCase.newCreate()) { return; }\r\n      let para = this.$refs.CSTestCase.newCreate();\r\n      this.$q.loading.show()\r\n      Apis.postCreateTestCase(para).then((res) => {\r\n        console.log(res)\r\n        this.$q.notify({\r\n          position: 'top',\r\n          message: '提示',\r\n          caption: '创建成功',\r\n          color: 'secondary',\r\n        })\r\n        this.newCancel()\r\n        this.getEchoLocation();\r\n      })\r\n    },\r\n    //---------------------------------------------- 新建取消创建测试数据源 -------------------------------------------\r\n    //新建TestDataSource\r\n    newDataSourceCreate () {\r\n      if (!this.$refs.createDataSource.newCreate()) { return }\r\n      let para = this.$refs.createDataSource.newCreate()\r\n      this.$q.loading.show()\r\n      Apis.postCreateTestDataSource(para).then(() => {\r\n        this.getEchoLocation();\r\n        this.newDataSourceCancel();\r\n        this.$q.notify({\r\n          position: 'top',\r\n          message: '提示',\r\n          caption: '创建成功',\r\n          color: 'secondary',\r\n        })\r\n      })\r\n    },\r\n    //取消新建TestDataSource\r\n    newDataSourceCancel () {\r\n      this.$refs.createDataSource.newCancel();\r\n      this.createDataSourceFixed = false;\r\n    },\r\n    //获得TestDataSource详情数据\r\n    getTestDataSourceDetail (valueId) {\r\n      this.$q.loading.show()\r\n      let para = {\r\n        id: valueId\r\n      }\r\n      Apis.getTestDataSourceDetail(para).then((res) => {\r\n        console.log(res)\r\n        let data = res.data;\r\n        this.dataSourceDetail = {\r\n          SelectedId: data.id,\r\n          Name: data.name,\r\n          Type: data.type,\r\n          Data: data.data,\r\n          ChangeFileDirectoryName: data.parentName,\r\n          ChangeFileDirectoryId: data.parentID\r\n        }\r\n        this.LookDataSourceFixed = true;\r\n        this.$q.loading.hide()\r\n      })\r\n    },\r\n    //---------------------------------------------- 更新取消创建测试数据源 -------------------------------------------\r\n    //取消更新测试数据源\r\n    cancelPutDataSource () {\r\n      this.$refs.putDataSource.cancelPutDataSource();\r\n      this.LookDataSourceFixed = false;\r\n    },\r\n    //更新TestDataSource\r\n    putTestDataSource () {\r\n      if (!this.$refs.putDataSource.putTestDataSource()) { return }\r\n      let para = this.$refs.putDataSource.putTestDataSource();\r\n      this.$q.loading.show()\r\n      Apis.putTestDataSource(para).then((res) => {\r\n        console.log(res)\r\n        this.getEchoLocation();\r\n        this.cancelPutDataSource();\r\n        this.$q.notify({\r\n          position: 'top',\r\n          message: '提示',\r\n          caption: '更新成功',\r\n          color: 'secondary',\r\n        })\r\n      })\r\n    },\r\n    //---------------------------------------------- 复制 -------------------------------------------\r\n    //打开复制弹窗\r\n    openCopyDirector () {\r\n      if (this.selection.length == 0) {\r\n        this.$q.notify({\r\n          position: 'top',\r\n          message: '提示',\r\n          caption: '请选择要复制的目录文件',\r\n          color: 'red',\r\n        })\r\n        return;\r\n      }\r\n      //存储目录防止移动时出现相同目录\r\n      this.existingDirectories = [];\r\n      for (let i = 0; i < this.selection.length; i++) {\r\n        if (this.selection[i].type == 1) { this.existingDirectories.push(this.selection[i]) }\r\n      }\r\n      this.copyDirectorFlag = true;\r\n    },\r\n    //复制按钮\r\n    copyDirectorCreate () {\r\n      this.$refs.copyDirector.copyDirectorCreate();\r\n      this.selection = [];\r\n    },\r\n    //复制结束\r\n    copyOver () {\r\n      this.copyDirectorFlag = false;\r\n      this.getEchoLocation();\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#Directory {\r\n  position: fixed;\r\n  width: 100%;\r\n  height: 100%;\r\n  .detail_header {\r\n    padding: 10px 16px 5px;\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    border-bottom: 1px solid #ccc;\r\n    background: #ffffff;\r\n    .btn {\r\n      margin-right: 10px;\r\n      margin-bottom: 5px;\r\n      height: 36px;\r\n    }\r\n  }\r\n\r\n  .pathLocation {\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    border-bottom: 1px solid #ccc;\r\n    word-wrap: break-word;\r\n  }\r\n\r\n  .folder {\r\n    padding-bottom: 30px;\r\n    box-sizing: border-box;\r\n    overflow-y: scroll;\r\n    .Rootfolder {\r\n      width: 100%;\r\n      .Rootfolder_list {\r\n        position: relative;\r\n        width: 10%;\r\n        display: inline-block;\r\n        vertical-align: top;\r\n        margin: 8px 0px;\r\n        padding: 5px 0px;\r\n        text-align: center;\r\n        box-sizing: border-box;\r\n        .checkbox {\r\n          position: absolute;\r\n          left: 10%;\r\n          top: 30px;\r\n        }\r\n        p {\r\n          width: 70%;\r\n          margin: 0 auto;\r\n          word-wrap: break-word;\r\n        }\r\n        .iconfolder {\r\n          font-size: 50px;\r\n        }\r\n      }\r\n      .Rootfolder_list:hover {\r\n        position: relative;\r\n        width: 10%;\r\n        display: inline-block;\r\n        vertical-align: top;\r\n        margin: 8px 0px;\r\n        padding: 5px 0px;\r\n        text-align: center;\r\n        box-sizing: border-box;\r\n        background-color: rgba(204, 232, 255, 0.8);\r\n        .iconfolder {\r\n          font-size: 50px;\r\n        }\r\n        p {\r\n          width: 70%;\r\n          margin: 0 auto;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .folderList_page {\r\n    position: fixed;\r\n    bottom: 0%;\r\n    right: 0%;\r\n    width: 100%;\r\n    height: 50px;\r\n    border-top: 1px solid #ccc;\r\n    box-sizing: border-box;\r\n    background: white;\r\n  }\r\n}\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=4dde408c&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=4dde408c&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4dde408c\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=4dde408c&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=4dde408c&lang=scss&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('q-dialog',{attrs:{\"persistent\":\"\"},model:{value:(_vm.ChangeFileDirectoryFlag),callback:function ($$v) {_vm.ChangeFileDirectoryFlag=$$v},expression:\"ChangeFileDirectoryFlag\"}},[_c('q-card',{staticStyle:{\"width\":\"100%\"}},[_c('q-card-section',[_c('div',{staticClass:\"text-h6\"},[_vm._v(\"选择文件目录位置\")])]),_c('q-separator'),_c('TreeEntity',{ref:\"TreeEntity\"}),_c('q-separator'),_c('q-card-actions',{attrs:{\"align\":\"right\"}},[_c('q-btn',{attrs:{\"flat\":\"\",\"label\":\"取消\",\"color\":\"primary\"},on:{\"click\":function($event){_vm.ChangeFileDirectoryFlag = false;}}}),_c('q-btn',{attrs:{\"flat\":\"\",\"label\":\"确定\",\"color\":\"primary\"},on:{\"click\":_vm.SelectDirectoryLocation}})],1)],1)],1),_c('div',{staticClass:\"new_input\"},[_c('div',{staticClass:\"row input_row\"},[_c('q-input',{staticClass:\"col\",attrs:{\"dense\":false},scopedSlots:_vm._u([{key:\"before\",fn:function(){return [_c('span',{staticStyle:{\"font-size\":\"14px\"}},[_vm._v(\"名称:\")])]},proxy:true}]),model:{value:(_vm.Name),callback:function ($$v) {_vm.Name=$$v},expression:\"Name\"}}),_c('q-select',{staticClass:\"col\",attrs:{\"options\":['String','Int','Json','Label','CSV'],\"dense\":false},scopedSlots:_vm._u([{key:\"before\",fn:function(){return [_c('span',{staticStyle:{\"font-size\":\"14px\"}},[_vm._v(\"类型:\")])]},proxy:true},{key:\"prepend\",fn:function(){return undefined},proxy:true}]),model:{value:(_vm.Type),callback:function ($$v) {_vm.Type=$$v},expression:\"Type\"}})],1),_c('div',{staticClass:\"row input_row\"},[_c('q-input',{staticClass:\"col\",attrs:{\"dense\":false,\"readonly\":\"\",\"placeholder\":\"点击右侧加号选择文件目录位置\"},scopedSlots:_vm._u([{key:\"before\",fn:function(){return [_c('span',{staticStyle:{\"font-size\":\"14px\"}},[_vm._v(\"文件目录位置:\")])]},proxy:true},{key:\"append\",fn:function(){return [_c('q-btn',{attrs:{\"round\":\"\",\"dense\":\"\",\"flat\":\"\",\"icon\":\"add\"},on:{\"click\":_vm.ChangeFileDirectory}})]},proxy:true}]),model:{value:(_vm.ChangeFileDirectoryName),callback:function ($$v) {_vm.ChangeFileDirectoryName=$$v},expression:\"ChangeFileDirectoryName\"}})],1),_c('div',{staticClass:\"row input_row\"},[_c('q-input',{staticClass:\"col-xs-12\",attrs:{\"dense\":false,\"type\":\"textarea\",\"input-style\":{height:'380px'},\"outlined\":\"\"},scopedSlots:_vm._u([{key:\"before\",fn:function(){return [_c('span',{staticStyle:{\"font-size\":\"14px\"}},[_vm._v(\"数据:\")])]},proxy:true}]),model:{value:(_vm.Data),callback:function ($$v) {_vm.Data=$$v},expression:\"Data\"}})],1)])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <!-- 更改文件目录 -->\r\n    <q-dialog v-model=\"ChangeFileDirectoryFlag\"\r\n              persistent>\r\n      <q-card style=\"width: 100%;\">\r\n        <q-card-section>\r\n          <div class=\"text-h6\">选择文件目录位置</div>\r\n        </q-card-section>\r\n\r\n        <q-separator />\r\n\r\n        <TreeEntity ref=\"TreeEntity\" />\r\n\r\n        <q-separator />\r\n\r\n        <q-card-actions align=\"right\">\r\n          <q-btn flat\r\n                 label=\"取消\"\r\n                 color=\"primary\"\r\n                 @click=\"ChangeFileDirectoryFlag = false;\" />\r\n          <q-btn flat\r\n                 label=\"确定\"\r\n                 color=\"primary\"\r\n                 @click=\"SelectDirectoryLocation\" />\r\n        </q-card-actions>\r\n      </q-card>\r\n    </q-dialog>\r\n    <div class=\"new_input\">\r\n      <div class=\"row input_row\">\r\n        <q-input v-model=\"Name\"\r\n                 :dense=\"false\"\r\n                 class=\"col\">\r\n          <template v-slot:before>\r\n            <span style=\"font-size:14px\">名称:</span>\r\n          </template>\r\n        </q-input>\r\n        <q-select v-model=\"Type\"\r\n                  :options=\"['String','Int','Json','Label','CSV']\"\r\n                  class=\"col\"\r\n                  :dense=\"false\">\r\n          <template v-slot:before>\r\n            <span style=\"font-size:14px\">类型:</span>\r\n          </template>\r\n          <template v-slot:prepend>\r\n          </template>\r\n        </q-select>\r\n      </div>\r\n      <div class=\"row input_row\">\r\n        <q-input v-model=\"ChangeFileDirectoryName\"\r\n                 :dense=\"false\"\r\n                 class=\"col\"\r\n                 readonly\r\n                 placeholder=\"点击右侧加号选择文件目录位置\">\r\n          <template v-slot:before>\r\n            <span style=\"font-size:14px\">文件目录位置:</span>\r\n          </template>\r\n          <template v-slot:append>\r\n            <q-btn round\r\n                   dense\r\n                   flat\r\n                   icon=\"add\"\r\n                   @click=\"ChangeFileDirectory\" />\r\n          </template>\r\n        </q-input>\r\n      </div>\r\n      <div class=\"row input_row\">\r\n        <q-input v-model=\"Data\"\r\n                 :dense=\"false\"\r\n                 class=\"col-xs-12\"\r\n                 type=\"textarea\"\r\n                 :input-style=\"{height:'380px'}\"\r\n                 outlined>\r\n          <template v-slot:before>\r\n            <span style=\"font-size:14px\">数据:</span>\r\n          </template>\r\n        </q-input>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as Apis from \"@/api/index\"\r\nimport TreeEntity from \"@/components/TreeEntity.vue\"  //目录管理结构树\r\nexport default {\r\n  props: ['detailData', 'currentDirectory'],\r\n  components: { TreeEntity },\r\n  data () {\r\n    return {\r\n      SelectedId: '',//选中的详情ID\r\n      Name: '', //数据源名称\r\n      Type: '', //数据源类型\r\n      Data: '', //数据源内容\r\n\r\n      // -------- 更改文件目录 -------\r\n      ChangeFileDirectoryFlag: false,//更改文件目录Flag\r\n      ChangeFileDirectoryName: '',//数据源保存的文件目录名称\r\n      ChangeFileDirectoryId: null,//数据源保存的文件目录\r\n    }\r\n  },\r\n  mounted () {\r\n    //判断是不是详情数据\r\n    if (this.detailData) {\r\n      let value = this.detailData;\r\n      console.log(value)\r\n      this.SelectedId = value.SelectedId;\r\n      this.Name = value.Name;\r\n      this.Type = value.Type;\r\n      this.Data = value.Data;\r\n      if (value.ChangeFileDirectoryId) {\r\n        this.getTreeEntityTreePath(value.ChangeFileDirectoryId);\r\n      } else {\r\n        this.ChangeFileDirectoryName = value.ChangeFileDirectoryName != '' ? value.ChangeFileDirectoryName : '根目录 >';\r\n      }\r\n      this.ChangeFileDirectoryId = value.ChangeFileDirectoryId;\r\n    }\r\n    //判断当前的目录是什么\r\n    if (this.currentDirectory) {\r\n      this.getTreeEntityTreePath(this.currentDirectory.id);\r\n      this.ChangeFileDirectoryId = this.currentDirectory.id;\r\n    } else {\r\n      this.ChangeFileDirectoryName = '根目录 >';\r\n    }\r\n  },\r\n  methods: {\r\n    //---------------------------------------------- 新建取消创建测试数据源 -------------------------------------------\r\n    //新建TestDataSource\r\n    newCreate () {\r\n      let para = {\r\n        Name: this.Name.trim(),\r\n        Type: this.Type,\r\n        Data: this.Data.trim(),\r\n        FolderID: this.ChangeFileDirectoryId\r\n      }\r\n      if (this.Name.trim() && this.Type && this.Data.trim()) {\r\n        if (!this.isDataType(this.Type)) { return; }\r\n        return para\r\n      } else {\r\n        this.$q.notify({\r\n          position: 'top',\r\n          message: '提示',\r\n          caption: '请填写完整信息',\r\n          color: 'red',\r\n        })\r\n        return false\r\n      }\r\n    },\r\n    //取消新建TestDataSource\r\n    newCancel () {\r\n      this.Name = '';\r\n      this.Type = '';\r\n      this.Data = '';\r\n    },\r\n    //---------------------------------------------- 更新取消创建测试数据源 -------------------------------------------\r\n    //取消更新测试数据源\r\n    cancelPutDataSource () {\r\n      this.SelectedId = '';\r\n      this.Name = '';\r\n      this.Type = '';\r\n      this.Data = '';\r\n      this.ChangeFileDirectoryName = '';\r\n      this.ChangeFileDirectoryId = null;\r\n    },\r\n    //更新TestDataSource\r\n    putTestDataSource () {\r\n      let para = {\r\n        ID: this.SelectedId,\r\n        Name: this.Name.trim(),\r\n        Type: this.Type,\r\n        Data: this.Data.trim(),\r\n        FolderID: this.ChangeFileDirectoryId,\r\n      }\r\n      if (this.SelectedId && this.Name.trim() && this.Type && this.Data.trim()) {\r\n        if (!this.isDataType(this.Type)) { return; }\r\n        this.$q.loading.show()\r\n        return para\r\n      } else {\r\n        this.$q.notify({\r\n          position: 'top',\r\n          message: '提示',\r\n          caption: '请填写完整信息',\r\n          color: 'red',\r\n        })\r\n        return false\r\n      }\r\n    },\r\n    //---------------------------------------------- 判断类型 -------------------------------------------\r\n    //判断类型是否正确\r\n    isDataType (type) {\r\n      if (type == 'Int') {\r\n        if (!Number(this.Data)) {\r\n          this.$q.notify({\r\n            position: 'top',\r\n            message: '提示',\r\n            caption: '当前数据不是Int类型',\r\n            color: 'red',\r\n          })\r\n          return false;\r\n        }\r\n        return true;\r\n      } else if (type == 'Json') {\r\n        if (!this.isJSON(this.Data.trim())) {\r\n          return false;\r\n        }\r\n        return true\r\n      } else {\r\n        return true;\r\n      }\r\n    },\r\n    //判断是否是JSON格式\r\n    isJSON (str) {\r\n      if (typeof str == 'string') {\r\n        try {\r\n          var obj = JSON.parse(str);\r\n          if (typeof obj == 'object' && obj) {\r\n            return true\r\n          } else {\r\n            this.$q.notify({\r\n              position: 'top',\r\n              message: '提示',\r\n              caption: '配置不是正确的JSON格式',\r\n              color: 'red',\r\n            })\r\n          }\r\n\r\n        } catch (e) {\r\n          this.$q.notify({\r\n            position: 'top',\r\n            message: '提示',\r\n            caption: '配置不是正确的JSON格式',\r\n            color: 'red',\r\n          })\r\n        }\r\n      }\r\n    },\r\n    //---------------------------------------------- 目录管理 -------------------------------------------\r\n    //打开文件目录位置弹窗\r\n    ChangeFileDirectory () {\r\n      this.ChangeFileDirectoryFlag = true;\r\n    },\r\n    //选择目录位置   \r\n    SelectDirectoryLocation () {\r\n      if (this.$refs.TreeEntity.getDirectoryLocation().id) {\r\n        this.getTreeEntityTreePath(this.$refs.TreeEntity.getDirectoryLocation().id);\r\n      } else {\r\n        this.ChangeFileDirectoryName = this.$refs.TreeEntity.getDirectoryLocation().label || '根目录 >';\r\n      }\r\n      this.ChangeFileDirectoryId = this.$refs.TreeEntity.getDirectoryLocation().id || null;\r\n      this.ChangeFileDirectoryFlag = false;\r\n    },\r\n    //获得文件目录路径\r\n    getTreeEntityTreePath (ID) {\r\n      //ID 当前文件目录ID \r\n      console.log(ID)\r\n      this.$q.loading.show();\r\n      let para = { id: ID };\r\n      Apis.getTreeEntityTreePath(para).then((res) => {\r\n        console.log(res)\r\n        this.ChangeFileDirectoryName = `根目录 > ` + res.data.join(' > ');\r\n        this.$q.loading.hide();\r\n      })\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CreatePut.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CreatePut.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CreatePut.vue?vue&type=template&id=55dd1ccf&scoped=true&\"\nimport script from \"./CreatePut.vue?vue&type=script&lang=js&\"\nexport * from \"./CreatePut.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"55dd1ccf\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}